<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0916.1526                               -->
<workbook original-version='18.1' source-build='2022.2.2 (20222.22.0916.1526)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Excel Data - Viz 1)' inline='true' name='federated.169nll90l61i1g19jk98l0yb0kmu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel Data - Viz 1' name='excel-direct.0ylgo1p12x5w721bev4qm064kljv'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prajw/TAMUC/Data Analysis Project/Alex the Analyst Portfolio Project/Excel Data - Viz 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ylgo1p12x5w721bev4qm064kljv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ylgo1p12x5w721bev4qm064kljv' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5AEBFD207D2747D597235191F81B47CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5AEBFD207D2747D597235191F81B47CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5AEBFD207D2747D597235191F81B47CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5AEBFD207D2747D597235191F81B47CA]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5AEBFD207D2747D597235191F81B47CA'>
            <properties context=''>
              <relation connection='excel-direct.0ylgo1p12x5w721bev4qm064kljv' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Excel Data - Viz 2)' inline='true' name='federated.1dix6re09d1ufz1cfb5my0ti04vq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel Data - Viz 2' name='excel-direct.1wkc3as1yp10as13sbnby0x33cgq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prajw/TAMUC/Data Analysis Project/Alex the Analyst Portfolio Project/Excel Data - Viz 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1wkc3as1yp10as13sbnby0x33cgq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1wkc3as1yp10as13sbnby0x33cgq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_90C32020811E49D880A7E1B533338B29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_90C32020811E49D880A7E1B533338B29]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_90C32020811E49D880A7E1B533338B29]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_90C32020811E49D880A7E1B533338B29'>
            <properties context=''>
              <relation connection='excel-direct.1wkc3as1yp10as13sbnby0x33cgq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Excel Data - Viz 3)' inline='true' name='federated.0t1s0w60yp12510zrwsrh1jcd4gm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel Data - Viz 3' name='excel-direct.0n7f40015hmwf71gb99ok1srikoh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prajw/TAMUC/Data Analysis Project/Alex the Analyst Portfolio Project/Excel Data - Viz 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0n7f40015hmwf71gb99ok1srikoh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0n7f40015hmwf71gb99ok1srikoh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_769C201E2451445AADE8D50CDAA2EBC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_769C201E2451445AADE8D50CDAA2EBC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_769C201E2451445AADE8D50CDAA2EBC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_769C201E2451445AADE8D50CDAA2EBC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_769C201E2451445AADE8D50CDAA2EBC9]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_769C201E2451445AADE8D50CDAA2EBC9'>
            <properties context=''>
              <relation connection='excel-direct.0n7f40015hmwf71gb99ok1srikoh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Excel Data - Viz 4)' inline='true' name='federated.0qp2rvr1gzuvg111bq81e1o9cxhf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Excel Data - Viz 4' name='excel-direct.0z1qew40p3zmj61fs2g9k1xaxqao'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prajw/TAMUC/Data Analysis Project/Alex the Analyst Portfolio Project/Excel Data - Viz 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0z1qew40p3zmj61fs2g9k1xaxqao' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0z1qew40p3zmj61fs2g9k1xaxqao' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_39C19775718742D7AA6B25FA1BDA65D5]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_39C19775718742D7AA6B25FA1BDA65D5'>
            <properties context=''>
              <relation connection='excel-direct.0z1qew40p3zmj61fs2g9k1xaxqao' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>GlobalNumbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel Data - Viz 1)' name='federated.169nll90l61i1g19jk98l0yb0kmu' />
          </datasources>
          <datasource-dependencies datasource='federated.169nll90l61i1g19jk98l0yb0kmu'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='tick-color' value='#000000' />
            <format attr='stroke-size' value='2' />
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]' value='187' />
            <format attr='height' value='47' />
            <format attr='color' value='#000000' />
            <format attr='text-format' field='[federated.169nll90l61i1g19jk98l0yb0kmu].[Multiple Values]' value='*' />
            <format attr='text-format' field='[federated.169nll90l61i1g19jk98l0yb0kmu].[sum:DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ffff7f' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#2fc81e' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#35e222' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-color' value='#000000' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.169nll90l61i1g19jk98l0yb0kmu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{83432136-29E0-4C4D-9486-082246F5AECA}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death Count Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel Data - Viz 2)' name='federated.1dix6re09d1ufz1cfb5my0ti04vq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dix6re09d1ufz1cfb5my0ti04vq'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[none:location:nk]' value='113' />
            <format attr='text-format' field='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' value='n#,##0,K;-#,##0,K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' />
              <text column='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1dix6re09d1ufz1cfb5my0ti04vq].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{B1552446-CCA0-490A-9629-F632B50C5047}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel Data - Viz 3)' name='federated.0t1s0w60yp12510zrwsrh1jcd4gm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0t1s0w60yp12510zrwsrh1jcd4gm'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[Longitude (generated)]' field-type='quantitative' max='32660672.780303121' min='-32461227.47936606' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[Latitude (generated)]' field-type='quantitative' max='11758485.961956717' min='-11879512.383813836' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[none:Location:nk]' />
              <color column='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[Latitude (generated)]</rows>
        <cols>[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F8DD2919-93A6-4EF1-BD69-0E054F674CF0}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Excel Data - Viz 4)' name='federated.0qp2rvr1gzuvg111bq81e1o9cxhf' />
          </datasources>
          <datasource-dependencies datasource='federated.0qp2rvr1gzuvg111bq81e1o9cxhf'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[tmn:date:qk]' value='192' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]' />
              <text column='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{3A06509A-207A-4FB4-98C5-649BC3CB5E8D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97872' id='8' param='horz' type-v2='layout-flow' w='98960' x='520' y='1064'>
            <zone h='97872' id='6' type-v2='layout-basic' w='88557' x='520' y='1064'>
              <zone h='24468' id='3' name='Sheet 1' w='44279' x='520' y='1064'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24468' id='5' name='Sheet 2' w='44279' x='520' y='25532'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48936' id='10' name='Sheet 3' w='44278' x='44799' y='1064'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48936' id='12' name='Sheet 4' w='88557' x='520' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97872' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='10403' x='89077' y='1064'>
              <zone h='10771' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' type-v2='color' w='10403' x='89077' y='1064'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='13298' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9103' x='89337' y='23404' />
        <zone h='26729' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]' type-v2='color' w='10858' x='89532' y='58777' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97872' id='16' param='vert' type-v2='layout-flow' w='98960' x='520' y='1064'>
                <zone fixed-size='187' h='24468' id='3' is-fixed='true' name='Sheet 1' w='44279' x='520' y='1064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48936' id='10' is-fixed='true' name='Sheet 3' w='44278' x='44799' y='1064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13298' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9103' x='89337' y='23404'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24468' id='5' is-fixed='true' name='Sheet 2' w='44279' x='520' y='25532'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10771' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' type-v2='color' w='10403' x='89077' y='1064'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48936' id='12' is-fixed='true' name='Sheet 4' w='88557' x='520' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='26729' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]' type-v2='color' w='10858' x='89532' y='58777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AE859DEE-41E9-44A1-A10B-BE967A439845}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='137'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.169nll90l61i1g19jk98l0yb0kmu].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B273FE68-DDDA-4AB0-96D6-05CC76460E23}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dix6re09d1ufz1cfb5my0ti04vq].[sum:TotalDeathCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dix6re09d1ufz1cfb5my0ti04vq].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD8F3BA2-8BC3-4441-AF5E-9ED6C027CCE3}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[none:Location:nk]</field>
            <field>[federated.0t1s0w60yp12510zrwsrh1jcd4gm].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D5AAD759-DDB0-4373-84C3-0DBBE431BC3C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]</field>
            <field>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{585A1899-B93E-4FE4-A19F-B3E23BFE8A1E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qp2rvr1gzuvg111bq81e1o9cxhf].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <device-preview visible='true' />
      <simple-id uuid='{A6CB892A-A272-407A-A5E8-215D23DF0138}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      XsTcJSgFRQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='71' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABHCAYAAABRaUhnAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAR9ElEQVR4nO2deXyU1bnHv7NPJjOTjTCTBUIgEDaxsljFal3rbUBt7W0RocUrl5blcila
      tKiIua1i9VbacqXtVVxakbYWCpXQKooC1VZWDQYEIkmAkGWyzj7vvDNv/5isJLMkVcHPnO9f
      k3nPe97nPfP8znnOc96cV6UoioJAkKSoL7QBAsGFRAhAkNQIAQiSGiEAQVIjBCBIaoQABEmN
      EIAgqdHGL/LIp26EQHChECOAIKkRAhAkNUIAgn7Zs3o7U6fu4cWaC23Jp0sCcwDBp8Ge1du5
      pyxOoRlTOVBqH1C9NS/u4RvrnMx4aial1wzevoEgtzSz+WfH+M1eJw2uMKToKbokj++sKKak
      8OJ2sYvbOsFFj3zqJPPnHKci2ONLn0Tlvio27imgpNB8wWxLBCGAC8Q1pTM5UNr5Vz2rpx6g
      rLiYzRtHU3AhDRsIngbWLDpORVBN4W2XsmZZDkVWNUhBKt+r5q2A6kJbGBchgM8JkTCjgl/t
      dOIKQkp+FrcvmcSSm1LRA10i6ihfds/2rs/doVSYxgM1PPtcNTsPe3AFgRQ9k0omUHpvHsP0
      A7Op5o/H2dYMWTMms2GVHWvnAb2OoqtHU9RVUsFbdY7fPF3FlvfaaPEBOh0jrhrJgw8UcVlm
      t1DklmY2PlbOC+9E7NNZjIybks/ce4u5Pqe7nHTiND9+/CPeKpfwddT18MOjmdRlBCB52PnT
      wzy5o+OaKXqKLrHx9YXjmDUpcrNiEvx5wFnPj2b/nSd3RJwfwHe2mY0rd7PgRRdywhU18vTC
      Crbs83TVg0+ifPNh5j1aj2dARnn42y4nkMHdi3s4f5Syrzx0mGff7nBEgGCQ6rePs2BpJV3z
      bLmJtbP/zrq3u+0LuvyUv13Jhte7rZOPHmfuvHJ2lEv4etR19zePcLCrMXxsXrablZt7XNMn
      UbnvDE9ubumqS4wAFz0K+9Z/QFmzGvtXJrLuoWEUmhQaD5xk5fKTfLCunM3/dhWzbHZKD8zk
      7piTYD3j5kzglltyGT/CgEmr4K06wyMLy9lVdprd99kpSU3ULhcnKoBR2UyzxSurIu/aYh5f
      mcvlY1Kx6kFqbOKZFft4vuI024+OZsl44IM6/tIMOV+fwoYVOQzVg+wNUH3wdI9wysfmp05y
      Kmjg+tVX8MhXLZjCHl596F1Kd9Xw7LbRTPmGEZobeGN/GC4byys/H0WhSQVSkLMn6njlw+6h
      TowAFz2NvLYtCDkjeOx/hkd+SNQMnVrM2vuygVZ2vJFo353JHcsLmVpkwKQFUGEqHM7CWWbA
      j6NpEOZpVWjiFkrlxgWjuXFixPkB9EOH8L15NsBHY+d1MwxkA54WH42NQSRAazJQdPVoFtzY
      oczac+x4H3TXj2f1LZbIfehTueWhYq4C9r/bFBnJ0gxkAnh9nD0n4ZUBvY78icNZfkdmt/mD
      uGXBZ0mtm8ogMDmTSef9WtZJmRTj4MQpN5BY1y2dqeXpNZX85YirOzSI1DY4+2SFUCLFzk+V
      9sfIXG6dUMna3Ue5a/dRQEPmJBtz/qOY2Vd3zHVqXJwAvvDFrN53bM1kcjG8U++jCUjVZjPj
      NgOvbath+R01gBrLiAxunTeeeV9NI7OjLYUAkgj56DHu+E4VltlTWP94diRjQ+fawUBrszBm
      ApRVONjfMIaRscIg51nun/E+H149gZ++fAVjc7QRx9tzmKn31PYoaGbOhhsYv/kjnvlTA0cq
      JVrKz7FueT27ll/Di3PMICsEgf1r3mDqmn6uVdz5Qcv0VTfwpytO8PNNZzl4zI+rupmNpXv5
      6/vT2LLKRipCABc/eWaKdFBxqIVy2d5rFHCWt3AcmDAysVz7B2WnOU0OT91r65GhGSypTJtu
      gopWnltfz1dLo0+Em3eeYXfQytIlhUzMiVOt1sBlsy5l/SyAMM7Ks/x4STm7dtRRM2c0BaOs
      TKAW14Kr2fK9tDiVqRl201j+96axgIK3rpnnf7iP57ed4+AqG9cg5gCfA4Zy8206qDvFigdO
      U+VViKQzj7H0MQeQQcmN3cFA3rDI573bajgjASh4vZGQw+MOAk28uSuADEhOJ3tfPMQPn3UO
      yrIxs8dxsxWayw4x/0e1VDo7QhspSOXe46zbHpmbuN1BwM2uN9uRANnr5cNXK/juE3W9K3z3
      CN9++CR7KwORmB01RquBrFS6Q628IUwfDqdf2M8DrzpxSnRf80AVa0qrqQWoOcUPFlfw6oee
      jjIq9GkGMk0AYeSObJEYAS56VFy++FJmvHWAsl3lfHNXeY9jaiYsncQ3eoQf2glZTNPVsX/3
      Eb4+/Ujky451gCnT7ejK6im7b2f3GgEa7HYd9JoPJIg1h/t/Noqz3/uYim2HuWPb4V6Hi5fm
      sRQouNLG8HVOKtbvZfr6btvtdh0Q6D5Bljm24zjLdxw/70JqJizPZSQAacz+fh5b7qnl9dI9
      vF56XtHiYu4EIETdvipK91X1MTvrtny+qO2sWXDxY7WzatOVrCixYtFFvkrJz2LOmi/zzDxL
      717MNoKf/LqYa0fo0AHodNjSI3ma1Jsn8eulNvJTIDLBHM7qTTfw9DdTBm/apHFsKLuSFSXp
      2Cwd7pSip+jyQuZcY4z8PWYMTz8xnHEWNZHJqI0F665l631Delc2fTwvrS7k8iI9nRalZKZT
      suIK1s3pDvOs11zGK89NoGRSdzmdxcikkmLWPj4qspJeMIrH1xZTMsnY1WY6SyqXz5nCCytt
      XRNoVfyNsR4ZTLsIBJ8LxAggSGqEAARJTdwQSKVSsX///s/KHoHgMyUhAUw7PfKzskcg+EwR
      IZAgqRECECQ1QgCCpEYIQJDUCAEIkhohAEFSIwQgSGqEAARJjRCAIKkRAhAkNUIAgqRGCECQ
      1AgBCJIaIQBBUiP+Kb4nYfBUBKi+z4HaoGLMSzlozNH7CMcmF9X3O2JWmTkjlVG/7LtpjiIp
      OH7nom59G1K9jEoFpvEG8u7PJO1LKVG7ptOlzTRsaI95zdzlGeQtzwBAqpM59rVzSHWJ7SCa
      tyKT3KXpMcsEzsqcmFOHvyqIebIhajspQYXmrW7q1rcRqA6ihEBn05B9pxX7/DQ01t7nhNxh
      Tsytw30o0Keu/sj6mpmRvxgKQO3aVs6tbU3oPEO+lrFbctHbtUIAnQTOytQ82ET7bi+EwTzZ
      EPcc3wkppgNEQ24PU7WsEe8xiYJHh5B2nSniLJtdfLyoAdt/ppG3LKOPCBRZIVAVjCqq/tDn
      aLn0veFxy515rIWm3zlJvy7OP8iHofH5dkwTDRiLdMjN/e8LJ9XJfLykkZAzTMGjQ7BMM4Ja
      hfdIgOqVDlr+7GbMC3YMBbquczRmNeO25sW1tekPLqofaCJzZo/tYHqIPhr+qiAffesclukp
      6IdGXD/pQ6CQM0z1/Q6OfPkMzj1eMktSSRkTf5/wTmfU52gH5PwADc+14z7oZ9T/DSX9RhMq
      DaiNKrLnWCn40RAanmmnbZe3r62uMFKdjDEB+wZC4IxMa5mb9K+kYhofW/iuA35aX/eSszgd
      tb7//f8VSaHmwSaUkMLYzblYp6eg0qlQaSD1CwaKf5eLNlND9QNNhL1x9mQ4j5A7jONlJ+Yp
      RqxfMg3o3OatbpSAgu0ua5fnJ70A6je049jkImWMjvHb8xnxRDYac/wXO4S9CsGWEMaRurhl
      e+KvCuJ42cmQ2VbM04x9jmfOTMVyhZH6Z9r7OEfIoyC3hjEWDuya8WgtcyO3hsmebYnpESF3
      mNonWsi6zYxpXHQRug/6ce3zk7skHW1a3wq1aWryvp+B54MAzr/1FXosXO/68B6TyJ5tQW1K
      /AUcwYYQLVvdpF1rImWs2B26C22amsInsxm/PR/ThMR7VtkZJlgfQp8/MGf0fhgg7FPIuLn/
      3kulV5F+Uyq+jyT8NcFex4J1MkpQQZcdfz/mRAk2hHBscmGZnkLqpbF7f8cmF3JrmKHfscb0
      HO9RCbVehbEoenumXmYgpUhH8zYPRNkr93zCXoX6DU6Mo/SkXTvA3v9PLqQGmezZFlTabuEk
      vQBsd6cxZJYF1QB9qtMZDcMHNo1y/s2HIU8bc+QwjdOjhBR8x6Ve3wdqZVBF4vpPiuY/u5Ea
      Q9jnW3s5xvn4q4I4XnJiX5SGbmjsxpKdYVQ6FeqU6PVpzGpSivV4KwIEWxLZXxqc7/rwHPJj
      u8uKNj1x1w02hnD83oX1S6Y+o27SC2CwBGpllDBoMxNXjiIrBBtCaDM1qFOiN73OpkGTqsZf
      1XsE8J+U0FjVfbIng0VuDtG8xYX1SiPmKX3DsZ52161rQ5+vJbMk/ka8prF65PYQ/lPBmOX0
      +TrCXoWwP/48QJEUHC87MRbpSL9hYL1/2xsepPoQtnl9RS6yQINEOicjt4eouPlsr++1GRrM
      04zYF6R1ZD66j4X9CnJbCH2OFrUxeu/Y2XuGnL1jA+lcxKnen9zj5b1q0GVrsF6VQs6idFKK
      Ew/j2t704q8MkndvJqooE1qA9rd9tL3lpejXtoTibvMUI/ocLQ0b2rFMM0at2zhSR8gdJtgg
      Y8iP7Yrug36cf/eTd08G2qzEOx25LUzjSy7Mkw39ilwIYJDkLE4nZ3H0fLl7v5/Dl1Yz5FsW
      hj2Y9YmMtYVrsylcmx31ePMWN0dn1jK8NIvsO2O/8KJ5q5uaVU2MejqSiYpG7dpWHBudjPtj
      LsZRic13dEM1XPLWMKQ6mdOlzbTu8BBsDnWJ1TLNSPZcK1KtHBG7KXbjuA/6OTm/gbxl6dgX
      xNsSvZuQO8zJu+rQWNSMfsber3iFAD4lzFOMZN1uofUvHmwL0tDbI72+Nl2D3BYm7FeijgJK
      UCHsUwYc6mTOTKV5q5umzW4ybzVHTc+GvQqOTS5M4/RYpkfP+3srJBy/dWJflJ6w8/dEn6Ol
      4NEhFDw6pN/jbTu9aFJVaDNi3Gc4MvnWZqjJmDGwdw53ZoxG/CQ76sgl5gCfFupIpkNuCyPV
      RlZhVVoVhkIdckuIsC966iPYECLkGXi6U6VXkXqJHumsTCjaa4jonkxm32mNKhJFUqj9aQs6
      m4Yht3/yL7sO+xV8H0kYCnRo06OHNN5jEm1vesmYYcYwLPH+OuxVaHgxfsZIjACfImGfAmpQ
      abp7H/NkA02vuPCfCmKe0v8P7z0modKoBhTPdxLyKpGMVpRQvWsyOVpP+leiv1fMcySA6x9+
      Qu4why+riVoO4ND4aiD6Yx/9IZ2T8R2XsH83Lfp8KAzNW1yotETWKAaA+6Af96EABaVZMTNG
      QgCDIQyKQuzUaTjyIxjytBgKupvZNNGAOkVF62vefidliqTQttNDylg9xh6PCSghUEVeEBn9
      kl4F71GJlDF6dEP6N65zMjl8VWZMxzBPMTL56IgYNwgfL2pAqpMH/ChIxLHdoIH0m6OL0F8T
      pPnPbrJuNfdqi3gockfvP0IbN2MkQqBBIDXInFrWSOBs9AfMnP/w0fpXD1n/bkGb0e2MxkId
      Q+daafq9C/d+f5/zWrZ7cP3Dj31BWq+41VseoPqHjj6ZoS7C0PKqG095gOy5/ef0FTmykKS3
      a0i/MeEXAn/iuN7z0fhbJ0PnWmOGeY5NLhQZsm6PvUJ9Pu79fpzv+Mi63RI3YyQEMAi06Ro0
      ZhVHvnyGyoUNeMoDKMFILjvYEOLsmhZOzm8g6zYztnl9szE5i9JJuy6Fj/+rkbY3vCihSEzs
      2Oik5uEm7AvTSL++d8+lz9cSbAzx/hdPU72yCf/HkacrCUOgOkjVDxzUPNxE3rL0Pud24vkg
      gOtdH9mzLHEXs/5Vzv28NdI27we68vxyW5jap1o5Ob+B7NkWchZFz6J1PZ90gynmYxfno8iR
      Cb5+qIasW+PPXZJ6d2j3QT8nvl1PyJ3YWvyoX9rInNHdc0p1MvX/307bax6kOhklFHmozTzV
      SO6yjD7rAD1RQpHl+XO/aCNwOpjw49C+4xJ1v2zD+Y6PoCME4ciqatp1JnL/O8Y6QBiq7nPg
      3u9n7B9y0dn+dQHECoHk5hCNG520bHXjr4msmifaNgD1v2qjbn0bxS/nYJoY/8ncTrwfBjh+
      Zx05i9OxL4z9WDckuQAEAhECCZIaIQBBUiMEIEhqhAAESY0QgCCpEQIQJDVCAIKkRghAkNQI
      AQiSGiEAQVLzT/nz9NHtQsi/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Z5Bdx5Wg+V3zvHflvUUVUPAESIIWpCiJoqiR1JJ628309szszI+e2Y6Y
      2F8dsbOzMRM7ERuxHdM92z1qtdQr02pKokSpRRI0oAEIEt5UAYVCeW9fvXreXZP74wEFFGwB
      BIgCUV8EIvDq3Zs3b748mSdPnjxHSiaTwmKxsM46DyOqxWLBbrff73qss859Qb7fFVhnnfvJ
      ugCs81CzLgDrPNSsC8A6DzXrArDOQ826AKzzULMuAOs81KwLwDoPNesCsM5DzboArPNQsy4A
      6zzUrAvAOg816wKwzkPNugCs81CzLgDrPNSsC8A6DzXrArDOQ826AKzzULMuAOs81KwLwDoP
      NesCsM5DzboArPNQsy4A6zzUrAvAOg816wKwzkPNugCs81CzLgDrPNSsC8A6DzXrArDOQ416
      vyvweUQIQS6bZXExSnppFpvDg9XupLK6FkVR7nf11rkCKZfLifXw6HcHIQSzs7NcOHMYb2Ec
      p0VQE7ShGYKibjKUDeItq6e+tQuP13u/q7sO6wJwV5iZmSYQCPLRh+8xcqGbl7e4CbotSJK0
      4jrNMEHAuZiLnV/6w/tU23Wu5KFQgfL5PPl8jnQyjscXIJ1MkE0naWrrQFHurAmEEORyOY4c
      fBePPseIZjC9pFLTvJFUYYyQp9T5DVOwlDE4O5khldMpC/sxXX6GBvpobt1wN19znTvgcy0A
      S4vzTIyNMDcxQGX2KHN5F5rqQ85MUR8weeNIHXUbtlPTsgWH04XT6VpVuaZpks/nOfb632ET
      ObY0+9BNGBibYKkQpWyLb/na+WSRc7MmO+ucOG0K0VQRt32CvpECdQ3NqKp6zUyxzmfH51YF
      mhwf4aN3XqPNOkRCs2OVDbrKihwYUXi83kACVAUGE24WlCYyyUW6Hn+Rlo6ttyx7cXGRkeEh
      itk4Q31nUdFwOZ3sqpPwOVQs6q2Naxem0yyYETY8spey8kpked0gdz/4XLW6EAIhBJqmcebI
      +3iLozgtgm3lOWJ5K4aAx+oNFBmsKizlIG9a2eXs4bnKKVJTPRiGcdPyNU3D4XCgmjmk7AJb
      amx8Y4cfign2DxgoyupG8/YqN3uqs8x3v0kikbhbTbDObfK5UoFGh/tZmOinpmUL/kwP7TU6
      josJMJ+qTaNeZYEMOSHkjAEgBBjTRzj26zm2v/SnWK225esy6TR2h4NkMknvu98nThCHN8wj
      gRQHhwyqfRKPNPmYWsqTyat4HKvLummaUHRU43A47sr7r3P7fG4EIJ/PMzvcTX3mAMfe7sGJ
      HUUqLn9/dee/GkmCjjLBWHKaQr6AxWJlZnqK6bEBUhNnSOFl554v4HPZ2BjUmVB8DOYEev4s
      NjWAz2kj4LYg30CfN4VgLl4gp0uokoku2Sj62tmwbSc2m+2696xz7/lcqEBj/d0ce/snDJ8/
      xWJGUKNOUyzk+XjChmmuvpyiAaLhRVxuN72fvIk0+Bs6lAvsarSTTsY5efh9cp42rLJBo7iA
      ZkiYqhO7tSRdqiIjy9cKgGaY9MU9pMufIW5vZlJqQmncS1l9JwOnD7K0FOPY4Y/vVnOscxs8
      0DNAJp3myBt/B8lRWoNFvEGJbNFkY4VEe6RApijBTVRyIUojv2EKEnmZVGgP1W076H3vR0xM
      z9O4wYNVldEMgc2i0OJJ0z1wnsY2Fb9TplqaIOYJA9kbPiOV1zmbjOCU8tgm3mNbWUnduTCe
      Im3x0iCPs7TUTjS2hK7rLMWizE1PUlXbQCAYeuAtRKNDFzD1Ik3tXQghANbUOz3QAnDywG8o
      pubYHC5iUyAYFlzu8RLuW2gWvXPgsMBYoZxA6zM8+vgTjI8OUevKIocs9Iwn2dHkxzAFHjlL
      SyREMpXBdVFlqfBZ8DnS3GwizRUMAiyyISIDTgBGYiYxw065PoHkBiFMnt37HB8dPIAnfZ5N
      lSqzZ46SqnuG+pbOT91O9wtd18lmUoQjFQAM9nUTj87xyJMv3OeaXeaBVIHy+TzR6AL1m/Zg
      OCrpnrMyk7z+tULA+BIU9Gu/i7jh2LwffyCEkRhHURT8wTCpvKCt0knEY8UwBVZVYku9B4Bt
      jV4sinyxbIHdcvMmLPPZ2FB2+RpJkojlZLZ452gOK0TTgtT8KId++0PyiXkaAqDIEtV+lcTI
      8TtroDWAaZoc+vBdhk5/QDqbA6CpbRObdj5xn2u2kgdSAKbHh/jk1f8HkVuioWMn1W6NugCc
      W3TTOyczlYC8Vrr29LREqqhgvWoRnMgJTs9YeLImhUcs0vXYl5gYHWJsZBiHpTRV10WcKLKE
      LEmEPFbg00/fQgi2V4HLpiCEYF6qwpUd5okGwTPVCXzOkgUpnTdw1Wz+VM/6rLmk4gghGBsZ
      ZLj7AKq/DrvDiWHoyLKMqqrMz05/6mclE3F6Tx9BCIFpmrz/zuvomnbb5TxwApDP5zh//D1a
      AgUWBz/G6/Uxkg3w1pCDnjkLsynIFsGmlkb/kYSdKq+BcdViWJHhCy1FJMVG+e4/Jh6dxjK2
      j2D8CC77vdUML8nQ4HwRpbhEY1BCkSXUi3sIc4kig3oDTRu23NN63E0KF2dlAF3TOH/qY2xO
      P9Njg1hUlbf/8S+JRhc4dehtxj/+4bKw3AjTNBkd6rvhvoyuaYhCgkI+z+m3f0B75k0udH9y
      2/V+4ARgbm4ONTtFjSePtzCEyxemqWMHu6vzlNszPNNsMpVS6ZuHsXwEf3U7Z+YdpIory3Hb
      JLK6gmj9Jh5/iML4UcIeC1V+C+p1LDn3gqnFDJsjlyuWzusUNJNowcGmXc+uqcXi9TBNk4Fz
      J/nVT/6Gj17/Ae//8m9JpxIkkwkWF+ZwFSdxyXl6Th7GYmY58tZP8c69haui45bvpus6s9NT
      NxSUYDjCxt0vcOb4R1TmT+KzC5yTv2VuZvK23uGBWwRPDHSTzeXJaVDuyHPmwCvU73iJjK8O
      hzhGT3wWs7IdEfQQM2RSp99mb3MRzxULYiFgIg6Fst1s3LCDvoM/pz1oclOT0T3giXY/ykVh
      yxQM3h9WcAciPPrk8zwI7imfHHiXxeFjGNYysvFZmqtDqKqV0eEhOnY8hWTk8YYqSY8eoc4/
      zVTZN/FUfY3K6rpblm21Wnn0yedueZ0qmcvGjnTeJOhYnT/X8v23dfV94tIooOs6sZlhtldp
      OC0lVWKro483X5+lunkzZdWNSNYuLPkCjO6j1ZVmW8dllQNKG1K6ITGecrDj+RcYOneCFk8S
      WfrsJ0P14mLaFIJkVuO5ZpWBdAG3x3NPn1ssFlEUBcMwUBQFWZavGZFXY7J8/OkvcCFcxsE3
      /4HWrl1s/+I3GRnsY2HiPJ7yFmbGB8mcfw3R8BIz5f8zHZ2bsVhWt0u+GhajURZ79yHVltZ8
      aU3F5b69tnsgVKCJwR7OHd6Hoetk8xofj1u5NDFKEnQG0ywtzhMfPED93E9ID72PXTFxW1d2
      fiiN/h8MK1jrnyQUjuDwBBiIqcws5T/z97rE8EKBfecyfDhmof3Rl+6Z6iOEwDAMcrkcqVSK
      QqFAMpkkmUySz698f20VC0pJkqhraqO28wm27HoWAJ8/SPPGR9jUtQWLIiPqXsDrdtLZte2u
      dn6A2MI0szknR2a9vDPqJafB4fd/y/Tk6KrLeCBmANnmYXxslLYdCi3+HOWhIhKXbf4Nfp3Y
      7DhRzY1mwJbAIvvH/dS6s6jyZSE4u2AnltZoicgEO7chSRL1ze1odU30vvM9Ku/T+6WyRZ7b
      4CSuBu7q6G+aJoZhIMsysiyTSqVwOBxIkoQkSei6viwUhUJhhdpltVpX9Qyn08kXX/wqkiQh
      hCAUKScUKQfgi7/zJwghWJibuSdCPT89zqZwllGjkb31FxhclEgMH2AuN0RF1Z+tysN2zc4A
      lzw7AaprG3jixd/DYrFga/kiA1GZnCahGYJLayTJLJDIy4wmrFgVaHSnODyuIIBoBmZTELHn
      Ucq2EHziz6iqqV1+lsViQbK678Nblthc52FObaZt1xfvarmappFOp4GS+mgYBqZp4vF4UNXL
      Y58kSXg+heBd6tzX6+SSJFFWUbVqAUgmErz/7pu3tBIBbNyxh0LDN3FrMzgtUOkR7KktIC76
      v5ir8INR/vzP//w/XtkYa4GFuWn6Dv4jyWSKcFUjkiRhs9kvjlwyk7Mx+nI1HO2bI+gEn6P0
      8pWOND3xME3eNOVuQX1AYAr41TkLZ5cCKDV7+MJL38HnDyz/ILquE12Yxxo7g9t2f8aDomZi
      BDspq6y5q+cCTNOkWCyiadryqJ/P57Hb7ciyjMViwTRNnE4na6UP2Ox2KqtqV3VQyG53UFVd
      TTxj4C/047UDAiaNWmy+Kj7e/xq1TR03fbc1OQPkMmmKC30kz/6SY+++QrFQWP6urKKKnXu/
      SbN1nKebS7u5RUPw8ajE26M+TE8DJyYVhhdL+n48J8gVdDx2CbcV5CuiMkyP9tP/0c9Jnf01
      5Z77F62hoAusNienT564q+VaLBZkWV4WhEs29Vwuh6IoWK1WvF7vqtWdzwq73b7qGUNRFNq3
      PMq5YgcTaReSBG6rwXT3PsTsSY7uf/WmM8GamAEKhQLD508RLCtNlR5fgPGkAzPWRyWj9E8m
      sXrLuHD0TbzhOiRZZvzUW3SWGagypPJwdNZHc9Cg3rZAf8KNU85T6S3p/zU+Qa2nQNQI0LRh
      K7quM3zuOGLqE5p8Gn6HdN9s7oYpOBX1Esvo7H5szz2ZAa7coQUwDANJku76ovR+YbPbqWnf
      iRTpYnxJIPkbUWcP4VQ16tVJZo0yQmXV1713Tcx73a/9FyLqIqN2J42tG0snr6IXsEsQdJqk
      E8dIJnYSjh+gf/8ITU/+c+wdX+dU36uAYCkn4fP76AqPcW5W4sXGNPpFoXdYJKp8gqPjUPto
      J4n4EiOHXqE5DE7//Y/RY5iCsvoO2jdtu+tCKMsyVquVQqGAw+FA0zQ0TcPj8WCaJqZpfm6O
      YsqyTLisknDZ7zI4cAHfbB6nD3RDMJ+YWzb5XnPffajrNcj1exl2PU/wopQqikLbtidJhp/m
      WG4LFtlE0tL0JiJUy+P0nD7O5m07cdVuZ15uohDYgtcf4q0hB9Fsye/nSm+GoiGRxU1lbTPx
      WJSGgMB5tXPQfSKWMQiW19yz8m0227J155Jp81JHKBQKq1psPmhkZ3qZ1wP0a21Ml32d+o17
      +NWrPyOVutZjck3MAJ7pN5hNBbFYSm6yuq5T3dhBqLKR86c/YXEihmNpFn/DDgYWegg2VCHL
      Mtu+8M/ZfHE67z78Lp5IA/bx1zg/L1HpFYSckCnC8XgtNVt24/UHcTjd9I4ECOUWqAzYr9kn
      +KwZmc+RWHqPHY89hRCCqqrrT9V3giRJKErJ6S6bzSJJ0vKml6IoZDKZ5bXA5wUhBJIzQv0X
      /jfcnsvBx7704kvY7dcePV0TawDb+G+JizDNW54E4NB7r+NwunF7fEQXF2nb+SVqmjdSXd/C
      6FA/lom3WUgZ2NxhBk59gCdURfbMj4jPjzMakzBMEwWTkEtCkkBp+yZdOx5HlmUURcFT3sDw
      fIHo/BQLBTuJnEHIeX8kIZU3sJppkkUFSbERDofv+jNUVUWWZTRNK5mSbTaEEMv7AGtdABKJ
      +KpdQyRJoryqDqvNxuzkCEMf/h3TCwmq6tuuu+ZZEyrQsOfLbHzuj5Y/1zS00n3oDSRJYvO2
      R/D6fCiKgqIoNGx9Dtcj/5a2Hc+VHKb6j4IQjEkd1LsSRDwKHRGT4YSDd4bs9BQ7aWjtXNav
      TdOk+8xpEskkC1INJgo+2/1TAzqrnYQ8VoSep76h4Z48wzRNcrkckiThdJYO5SiKgsfjWf68
      lrFYVgqophWZnBhb8bfSDvflk3mpVJKlY9+nURlhaeBDTp08QSIRv6bsNSEAmx//En5/gIWF
      BYQQ1De10bLt2Wv0077z5xk78gsS4yfRi0VC4QiPfuPPmDjzFi3mKSIukydqUlR4TJ5ryrO9
      Ms/cUoGl6NxyGYqi0NLahis7wo7APJvLNMruqwnUJK+ZBPMDLEbn78kzLnX2SzPBJS7tEN8P
      5mfGOXPw1ys67Y24Wkij0ShO58qNy5PHjzI/d/l3Hjr2OnWOGEUDDCFhxvrxeLzX9Kk1sQYA
      iC1GOfXOD9n77X+Pqqpo+TSx6DzxZJKTH72N3RuhrrGVYjrKdu8oH++bJVLdyJneYTLRMb7a
      oRPLQiovEc+BbsLOWthuDpNcnKa6rnH5WZFIGVMtz/DRmffZWW+nwl9yJxRCfKbm0HReZ98F
      wfMvfYdjRz7mubKKe/YsRVHWhNlTCMHC/BwLh/47tfY08zOd1De13lYZlZVVKz4buk48kcLh
      cpNJp7HZ7ZjFkmA5LPB4ZZJTxTyH3/gBLn2evKHS+cL/gtvtWRsCYJomIz0HqZYnSKcS+PxB
      kvEopw69ieQIoeZnabP3EZ3Rqd/1O5w89WtMPYF9ej9y3kVN55OMeVREPkHcEFQ1NyFQON3/
      W1xNT7Ola/eK50mSRNfmrUjzZ3DaCoxG86TzJppkJ+gwqPLJy8ce7yVuu0pbqEDf2VOYQsA9
      tMhIknTfXKxN02Rmcpz44iyqmcUcfZtqR5qxjJfWiqpbF3AThBBkslkiIT/pRIz5OTun9n2X
      PbU5hEVc3AGH8vwZIm6w2ksbj6/95G/4yrf/ZG0IQPeJQ1S27GB++iCHP3ybkFsmVL+ZwbF/
      ojyUIaimCbugYFcIVTURTbzA5vo6Zj74C1K6jZeffY5AMAiAaRrk8wXiSzH0qn/D6MjQdbfC
      VVWl7pGXOXv8IO5wLVWVVfiDQYqFIicPv0OzbZaw994vDruqrZyfOY+t4jE+fwbJUgc9dfhD
      5s78mt01GooMWUViVNlM7d6v3zIeayadpvd8L488suu63587d5bT+/+BCkeaeS2I4svQFc7h
      sqxszerL4VqxqRKdznEWJgfXhgDk+t9gjq8SJ0xt9iMKWTvBnS/w+DNfZrZnH9liaUd3eGKW
      qPYxFOJEdj3KjD3A77TO8/Y//YyOLTtxu90s9r6LsziJZGqky/eybceTN3xuMBThqS9+Y4Xq
      Y7c7ePT5r3PqyAHs+fO47/HxyP6ZDI0hB7Mu6+cyQFbP0fepWvglGxoFqbxgVN1BePMTbG5o
      XdX6w+F00tKyUkUyDIOJ0UGig0ewJvv4clMCWQJVXlhh1r5Snb36fEMiD8VEZm0IgFXSqJr+
      CXVesKuCC2kPpz54lZatz/LEM8/z1k//AhhmqaDiWehme2Ca00er8IlF3DZ4xt+DOdrDXFpi
      Q0ggXxy4J2b3kYxvwuO5eTKKq/V+RVGobdpAtu8c7nusNZR5bbzfl0ZynSaTLbB15+5b3/QA
      oOs6Z098DEO/wRMQTGXsSBt+n+2dt7fjPTU1SSK+RCAQACCZTDB85gCB+X1scAq4gRPvpWdc
      b6NPCMGWKlj0e9aGFUhW7SR0J1Oepxl2Pkt467fo3P1lKqpLXoEbd7/AiOdLvPjyN9GlUrQ3
      1cwRNcPE8zCVAK8dWsMCWSp9BhhN2FDvcOEXKSsjZm2mqN9GaLk7IOC2gGKhuXMb0ufELQGg
      WCwweOJNWgIasRzEy1+kdeP22zYy1NbWsamrFBxgZGSYH373vxFaeJOQ8+YK45Xu9Ff/XTdg
      TN1K44ata2MGkJ1hgo98h3BZxXUbqKFtM1UNGxgfG6X9sa8xPj9JffMGcvUdRMe6mZcLmKl+
      loo2FNWK3VdJ1oxRuWUDZeV3dsxFlhUatzzF9Cc/oiH4ad/w5lS6TabHh3nuy//s3j7oM2R6
      aooqR4ZoBs5oW/nizj23db+u68zPzVJVXXITSaVS7Hvjt7iMOQKfIpZwLCsxad8JihetWFgb
      ArDpy3960+RxhmEwOjyI3W6npq6BfGKWqd5DhJp2Utv5JJuDwWVpv1Kv/LQmzVw2y2SsQEPw
      7kdvvlTfQxfiFG1lbNm2a81HgVgtpmkycOYgWwMGx6etPPP7375tC5SqqlRedAsZHRnGarXy
      xS99hVPvJYCZO6qXZsKY0kWoYSex/gMYhrE2BOBS5xdCkEwmGD37MeW1rZTXtpBJpznw6l+S
      SUaxuMKw99vkzv2c9rBB7PgH9LmeZvdzX6f/xH7yc71ENn8VPZ8inUqi6SY+f5BgWRWBUOS2
      6+UPBDAdYYRI3/XOObKQJ+yx0FnjYjjnpLzy7vkA3W96Th4hnDmF7IfQhmfx+Xw3vf5KI4Su
      6yiKsnzEMh5fQpEl5icuIOWiNHnSt10fU8DYkkTBu4GCsDJ06KdYQ83EFhfXhgBcQtOKvP/2
      b6ktnmI2NUF5bQux6AzZ1CJfbMnzwYKFbCZFjddAkqAoLGzY8QwXju+nevE3jJk1dB/9gFrt
      NA6rzHxCpbaswEyvH579MwLB2/OzUVWVTbufZ6bnZ1QF7p6F5sxYkpmEYDTloDzso7z51llp
      HiQKhTxem+BCwsvmp28eCrH/7HGKsVE6n/gGAH19fZSXlxGJlJGIxxl8/f+kzFmk3iZK57tv
      LkvXRTNgWGygMtRFcOYjmqqXyGkn6X67Z20sgkeHBvjkwDuMDg/TZh4jldVw1u5idmaa+aGT
      WLzVTCYkckWT/nOnMAVMJiSS9lYCwRCFsYMIYLIYYfTCGUJOQYXbYLHgYCqlkswWGTp37I7q
      5nA4mUrcXQt9PKMxlTC4MDyJGmyhsaX9rpZ/P1laimGf+C1em8DauBefL3DDa4UQDA+PMDgZ
      I5vNcOrEUUJBP3a7ncnxEfrPn8FptxByCizKtRE+VsvpaZkmeYDw9C9oc06jyhJuq8ljNcW1
      MQMsHvkbcoaHiUkHPmy0hDMITwCfz89krI9tngWCDrDI44y6GomlLWRqXmbTtt1Mjg1Tbosj
      BFisNp5pAZ9dUNAlJEeIhfAewov7yS/0sTC3hUj57e08zs/NspTKAnfPHtpS4SReKFJdEyAW
      T921ctcCizNj1LjzRItuOrfsvqnqqGkaTcVPqAoU6P1A0PnM73Hg7dfYuHUX02ODVDV2Ep31
      YphpPs3GfFeliUM1r9kjkKQ14gzXGtTZHVmgXFkgL3lwWSCzOInT5aLuyX/FktqAKUqmTleg
      ktPzTto2bsXpcpHPpbHKAlUWzIwPMhaXAYlMURCfG+PkgdeZjRfocgxy4r1f3PYBEIvVSlPY
      hml++lkgVzSIpjSqAnb2drgoWgI0NDV96nLXCtlMhtm+g1hkKOC4padpfCmGKooll3VFIrE4
      h9CynD19nOLIftIn/hZ7y5e5kK36VF4il4KoXY81IQCXkiqWOXLYyWBVIT91HNM0Ka+spmr3
      H3B6zkZ3YQOynqXOnWVpfgoAiZJuKEsSzf4Cbldpaz3gkPidLp0/2CloDgl0E/r6h/jxD/+e
      4QvdqxYE0zDwuyz87GiU/unbX4BdiUWR6B5L0j2WxGFRqLYlyGYyn6rMtUQul4PEMMkC2MwU
      6dTNZ7fFifMEnSZ5HYS3kfjhv8ZhkanNH6U9VKTeGUca+DkTMY2JxL3x2F0TAnAJlxU6AqVG
      u3LADZdVENrxhzz1tX9NeuI4m8o1Yj2/AiBSWc/+qXL64h62RlK0+kr3yxczQfodEtW+kpC1
      hHTio8cYPvD3TE+Or0oI6uobWIo8heSpYTIhSk5rd4giS7RWOMnrMmdiHiJeC2O9R+64vLtB
      KpXibM8Z5ubmGB4aXFUsnRsRDIVQWr/OwVELEXuBmaGTN2zj/t5uPJO/QpUvZt/MJrGpJiF5
      gXFa6IuWNjDrXEmwuHBbb5y989OwJtYAmnltRYL6GCePHmLH7icYGx1h4+ZtaJqGXdawKmA1
      4sRji/gCQaqCNjzmQklNsl3+AYWAvF5yiZUkeLYFNlfCr84WOf/T7/HsU3vo3PXCTX1SZFnG
      alHprLIzGa9mPrGw7D59u0RTRfadWaSpwkV5WTsjEx+STd9+TPu7gRCC40ePcOrUCfTEFIbF
      h1qM0dm1ma5Hv0QwFLrtMiVJYufux1GMDP3THzM1/ja+ijYqqqqvaeNsLof94ihnV8GSHSfh
      3kK7eZRmGyxYL+ssTZZxEjkI3oOzO2viSOTHH7xDjXelhLssBnLsHAOTcRRXGeFIBF3XSQx+
      SMiWw6UaHBrMUd/UjreynUNnRlhI5LEpBks5wWJGwhRweMqFzSLhs5XKd1glFtKCbeV5TvWO
      4fCECJff3AY/1t/D3FgfVa4CmVyR8jsUgJmlIkNzGRxODz6bQVyupL59G5Gysjsq707IZrN8
      dPAA/f0X+PDD92hxLeJ1yOyoyBNwCmzFBWJ5mar61jva+1AUheqGViJte6jZsAvTNDn53itU
      NXWt3OyUZLSJgzgvem0mHO0YhQxhuXQoyHWFI27IKfA77twKdNP6rgUBKI++AaI0cl/ptTe4
      INE3U6R1405M0+SDN3+BaQsiZWcxBIwUa2loaiYQCtPQvgXNWcPoxCzHp61k3W2cmbURrm1j
      cFGh2raETS1FE20IQP8CJPKCQi5Ny6ab78KO9RygPSw4PClj5DO0VNxeCO5LBN0W6sJ2ttXZ
      CVuzLGZMOnc88ZlFZTMMg48OHuDg/tfJLY7yZCN0Vqk0BCRGogZOm8KxMQ1D9XHsyEFa2ztL
      YSNv0fNKv9nKw0SqquJwOHA4nYwP9dJ38gMysSk0yYHX56e/7xyuRDcXE+KwYESQE4OEHNef
      Ee/VJvmaEABtaB8Is2TfTznoT4fxqxnG4zKmv43KmgbGew/TUjzE4REDR/PzONMXsBcmeffk
      FF6XjcrqeoQQOKb3sTmSYSDu5OVv/RFLS0lCZZWMLWpU25ZQZJBliZBL4vw8pIoSrRu333Sr
      XnWXMzITo33Lo5ixIaqDd24SddlVdENwLu6hY8/XbukPf7eIRhf4+OCH9Bx+i9qARIUHmsss
      BJ0yM3GdkMdKTdDK4EySPeFx/MT4+MwweiGD0xPEdp2ICpcYG+7nwrv/A3/dNiveoCoAACAA
      SURBVKw2G8ViKemHLMsIIcgLG674KVqksxQmDnNuPE24qpnxJUGlNIkkwYLcQNZQSebB1Is4
      LeIzidixJhbBCxkYXlI5q21kUunAanNwQn+MYMseyiuqmJmZRpFhKS/TGtJKR+AKCp3lAkth
      HrPne0xOjCMJk3jBgs8Odc4EgUAAVVXY8chj5CQ/H4zYlhfXTitYZEGofjPuW8SUr6isZOcz
      L1MoFKkL355fkGEK8sWS+mUKwWJKoy8TpvOJr3+qgLS3Qzqd4rt//VccOnSQDeUKO2otZGZj
      9E4V6JksMp8SlPsszCY0nmgoRdOo95vsjQzSEv8V0+//38yMDyyXJ4RgYmKcRDyOEIJiPocl
      2IQpTC6cP8dbr/6AeHyJ0aEBju/7PpnB95AdpS1cv92kQ/uQ2cPfp6J5K/O5kq5jLcxS3rEX
      XXZwTutgIfPZ+EWtiRlgoliBHtrKXLzIRP9Jmt0x5vNOuva8ROuGToLBEMMT82TnB0l5t1Du
      t9Eg9Ze2xjGxqwYTxQjjfcfY4Z+koEvMevbQ0r6RVCpNwO+jOH+WvqgFXahUu0rnRZvDcG5g
      jOkklJWV33QWOPzRB5w7/DbtlU6cttWb5IQQ7OuOkypIJJytuJuforHzkc/s8EuxWOSjAx+S
      SqXIJRcgm8E6N0uXFCOfyVNeF6G5woFFkUnnDYqFHD5HyYpmufiaXjVPbLyHmayLSGUtkiQx
      1NdN5sT/IIOf5o07cIVqmDz4t+RG3iedTmPM9xBYeJcKZYYyJYqfxeURXZGhwllgbvwCIVsO
      qwKFbJK4WkOLfoxMtoBpmoQc98bycyVrwgqkz50iNX2eyUSI1pBJU1BQpV8g/slfMOPegJlb
      Qknn2Vpt8NbYABWWKHZ7aSjvDBdIFSRSTifFeB+yW8JhEUSURYQQbOrazPmTB2kVp5gIdVH0
      1pAuHMRtKyXS+2qHwSunXufNqbN85Tv/Fo/32sMzhmEQnRzAY5coaLf3o8ymFXZ98feprKq+
      qcfrvSKXy7H7sT30nDnBJmearcYcLqX0Dk0iydBsiupwyVGwOmDlVMJDrUhdo35UOjJkJ3/C
      6cwi2556GZvDhWyxk80X6O05Sb77R7QFi0ghaA2mgCvLuL46c8lkDZAkSFlVHbkFCaOYJvcZ
      OcauCRWonTPsqMiyzTvOSFRHkkqmy0p7khb9KG2WAXYFJrDIJmXWBPpVfdBtFWiDr9MZyQMC
      gYRIjlEoFJAkiUhNK2P+F3np23/Mzj3PkTQuqzEWReIPdkjYsuP8/Q++R19f3zX1KxaLNAc0
      vrqjnMrA6vV/3RSknS3U1Nbdl84P4PV66T9/jnJLnICewSWvbLzCVQmUTb2AJMHokkzxqnZ2
      WkGNnkTTNEQxRU4NU93URfb8r2kPFZc7uSStbtEqRCl6x1JOwtH2IrHz7+B3CLZXGbSF7/3o
      D2tEAC7RViYRcoobbntLksTumiIhl7jq79DuizOeC9EzI3Ni3od/6+8uqzSR8kq27PkKiqIy
      eeI1Kh2lxM2mEOzvF8wk4ckmQaM8yME3X7kmPZDNamXJ9GGK1Z0xKOomQgj6F0zqO3be8LrF
      xSipK3ZLhRCMDA2sKlbOapmcnGTq9OtsLIdqaeWusySBWshdtVlVssY5rTIfJzoYzQaXcy6b
      AnR3A9OT49i8FQSLg8y9+59odEbvuH6/6FE4lmojGx2hVlwefOyfUQSXNaECXcKqwN6W24vN
      MxkHu1Ui6BDE5TLOzltp29BJfcvGa64dGbxAZf400kUbc06TmDMiGGY96tgJHBaTmuad15ol
      JQm/U+VW2VOFEGiG4K0zUepqqqjf8ZUbpjwqFou88drP8Fg0Gjc9zvx4H0LPU6NMc6Svnadf
      /M5dScp9+uQJtEKWmckZtqr6Fd9BwlRJGSqmAEUqCbesOtDNJBGnTqMYx7bpj1nUi+Tm+zEV
      OxIS0un/RjINrSGQpeJNanBzJAle7jCI5kfwpwdw3IcIfWtKAIDlZNGrxW2DTxarqLAsgZKl
      IuhgQ8fKzj944RyFTAIjt0Q+o9B4cVvdpgg8VoPHnvkyb//jBRbw8dVHHrmm48myjKN6K/H5
      D/DY5eXsjlczMJcn7emk+ZFdbNq89aY7zNNTk3g8HnLRYTL9b7EzVMAQ4LbJ2BPnGBvso6G1
      47ba4mpKa5c+nqy1Ep9fOaskTAsDrS+z+cnn6e3dT5fn4ikrSSqduVahwp5hLJWiY+Nm7J1b
      GO7vwXvhb3DY4VNYglfgtEKd9c6F6NOy5gTgdvE74PnKSc5nqghbFXb6hpnq/yfikRD+YJhc
      Nkuu56eE1SWmEtAcupxcT1UkdkZifPLeb9j95T/G0DUikevvyja3dXDo3AfEYlFe3H7tNUXd
      pD8d4Gtffn5VI3dlVTXnnD5slgKbIipW9YqjnEB+FVkab8V7+99lgzfO/EKWGnVlJ4tZgjz3
      jd/DNE3Oz8/CxYnKNM3l+ERWBRamRoiO92JXNPz120kloOXux++9b6ypNcCdEMvCeFwmvOkl
      MAo4LKCkxzj25vdJxONYrBYW5DouqI+Trv1n/HbIz5WGnEovbFTO0Hu2m86Nm274HEmSGEuq
      NJVf3yElltZwegKrVltsNhvP7n0O0xHBcsWsN5e1Uqx6hrYNN67Lakgk4ujTx2gOSyymr11Q
      Wp1uZFlm8NR7PN142X+qrdLJaOxS0juo0PsIVTWhaEnCoz+g/sbnWx5I1sQ+wKWd4NtlYAHG
      lY1s/PK/R9MN5iaG0HUNc8Pvo6dmKeRzOLxlLGUNtu56mrb2DoLV7ew72E17qMC5WZmxhEpr
      2OQ3R2fYvuvxm9rnbTYbtcr0dcMmxtMacqCeypqGVde/UCiiSU4WMwbxRJIFtZnQ1m9S29p1
      x0FrhRAcO3aUt3/7S8zsErlojPbEGFapZIo0BUxYK7E89YeMDp2nQTuN4wrHs6IuWEpliVyM
      txNQ0+jR8/jlBAGH+akOpqxF1pwKtNoAtaYJumSlfuPj+Hz+0j//vyCTThCbnaR6014aWzvJ
      53OUlZVdPDyTo6amhkf2foMTR39ES8jgw6kA8VkXnZsqbnmAo6GplTP7j7O9YqU6oRkmQwkr
      T++9vdAfbrebbTseQYidy9kbP+3C93xvL2/90y/5zjaZsNtC97E8dvlSjjA4LdWw9Y/+dyYn
      xvDHj+ArXxn+0W2Xsbu8xHOJiw5oEhXuexsb6WZBrO41a0IAJKmU9vp2GuDUjIpry/9EU9tl
      VcEfCGKx2hg49DOqn/8XTI/2owmZsSM/Jz5cR07YiIQCtG57DpvLT2L6NBuzH1Go2gGOyC1H
      XZvNRqhpGzNTH67YD0jndMItj96xU5skSTgcN3exGBoapFjU6Oi48cK4p6ebf/rZ/8e3t1mp
      Dlzcd1AVuGj8yQoZ755vUF1TS3R2gubI9W2NyUyRusjltdJnxfVCGd5r1oQAwMooXlfHcbya
      og721hfZvmMnkrSy0zqdTp781n9AURTOT08QLq8haCvSKo5iConCHBx7L85jL3wHmlvIpL/E
      hb5eMpnMqkbf+paNHO47TIX/ch1tFhmn497GUPT5/CwtLd3weyEExz58k73tKhVeBYnSiG+x
      WRC5kj6fxUZTRxcAgUgli/MGEc/KLjA0m6XJn0e5lc33LnLlrP9ZzwJrQqO70Uvf6O/TOSdd
      O5+8pvPD5bxYAB2bd2Kx2cloF/NiyaXzoeXpI3zy279jemoCh9PJjkd207lp86rqqqoqjY+8
      yIHBAkcmwDQFcylBVW3jrW/+FITDYVpbLweJ1TSNpaXY8mdd10lnMsTSBun8ZZWloFrRLo7k
      hmLFZisJajIew2m93H6GKRiYzWMxk/idn33ijBuFMrzXrA0BuM3ri/5N2G+hMkCpUZ1OJ07/
      ysQTFa4i3tRpikWN2ZlpAA4fOrDqH6Cyspo9X/vXtD72Nd45l+B8VLmlCnO3OXH8OBMTk8uf
      VVUla9oxBARcV2SBkcAqld4rYiY4+4P/xIEP36f3wiA/PalzfqZAbyLAiVwn897Hmc66KOqf
      x0Dt12eNqEA35kp1aDnhs+JYlboyOTlBZWUV6Wxu2c59CatSGnGqa2qZmpokFD/A8FAXzS23
      zlYiyzJ2ux2brZxHX/oTisXCZzpiJpNJmpqb8fv9y3+TJIny8grKraXIwLoh+KC/gG92bvlX
      ViSwJSbxBQLs2LmLQuELnO89h5gbwiEbJJfGafcUEcLkUxwNfqBYEzPAarhydHbmxpjoO3rL
      e2pr65ifm6VcjF3zndsmGPrkZ5w/e5rouX1sCGkce/818rncquskSRKhUOialD33AsMwmJqc
      oPf0Md5+7afYrNZrsjtu274NWVFIF+G81k7evxkPpQ01IWBCCpB/7A+ob27B4XDwyVu/ZurD
      X9DY+494jv0YJXqGCpeG+sD0ik/PA/mqNfIIS6dfIZ/P3/S6YrFIeUUlRvM3lx26LuG1waOh
      Sej5Ls3GSSwK1MijfLB/35pLHl0oFOjuPsMvf/FzBl//f3FbJDLxax3QtmzZimfzt0jVfoNN
      T32DDZu2kBOXvVCzFZvo3LabuZkZhBAoTg/NL/w+p80gi5oMpnHf8yZ/1jyQAgDgVgocf+cn
      nH77B4yP9F/3mkQiwcLCPBUNm5hMXdb2ltUqoHZZixB0VQpSU93oun5NWfcTm81GKpVC0zRq
      HTm2Jt5h5vy14VQkSaJ94zas7hCvfP8vSSeWMGsvxx2NLiWYGB8lHA4zcv40zVO/JD9ymEcq
      i9RVWXB9/hLU3JIHVgAiLpMtygma9WNYuv+S/jMfYxort/zj8Ti//vWvyefzpTMCt7A0qLLE
      3HyUxcXFe13922b37kdBVpjMWjgec1G1+ekbXjvSe4wOyzDpxCJm7WaypsKwHCHQ9QQ7Ht2D
      1x9gbnKUqUWdwoVD9EUV7KoglymwlBV3JQreg8IDKwCXDl1IEnisBq7hn9Cz768YGehlenIc
      TdMoLy9n7969zA8cps67Oo/D72wx2P+bHxGLxdaMKmQYBjPTU4QCfuZEkE5vjumD/4BhXP/Q
      iN1mZyGnMNB7hu7Tn9Dr20zLv/qvPPfiy8vGhEQ6TxNpupQk7SLJBzNOmqpsTC5qnJxY3Qq4
      FF/zxv9udP2l/6cKMBiFVOH6Zd0Lri53zVuBVovPLvCKC2TOXSBVkMhu/3eUlVcyefQVtnhn
      sK7iTYUQOCywzT3CiV/9X1ganuPpvS/c18QVmqZxtucMh37x13RErEyFWxnWBC1Lpxkf6KVx
      Q9e1N7ki9C/KqAE3lXUbaN+2HYvFwlDPMeb7T5EPNDE9eJyYqOAJfZa4aaGr0UqFByo8Eien
      SoeS7sVrL2UFM0mJjK7isFmoDVk5P5liS6WB3SKhG7CUE0Tcl4XgXg5Ea0IAJKS7kiJUkkrn
      AyyKIFpI43a7cTkdq+r8V1IXgIg7zScjhxkcaKClte2+CcGJ48convh7nqgtMmrr4LEnv8rk
      wFn8kz+me//3qGz4r8sn33RdJxZbxCjm2VZpYrVN49PG6XnnDH5ZZoPWT7ukkRxVqFPBVATH
      UkEqymw0+C4rAy0hwYkJkx21K0dsuPPOeG4WlvIqNSEbDRUW3Hb54mwEAY+DD0fyOBQdr8tO
      MqsRdpWiOd/Nzi/L8jWhH9eEAMD13R6ufPlL0+JqYlfKEhz7+H00U0G235n/rsMCT1TMceTA
      39PS+l/uqIy7QV1dPYcOWdlWncG0CGanJxHn3wQP1DLL6QNvsHPvywgh+PF3/wrPzAl2dNgI
      V4EklUxfkpbDF1/EpRpIkkTgijibYUlma91KTTinldYBppCXT4pd4k4GgpK6I6gJ2Wkpt131
      HXRU2WmvsBHPGgTdKgXN5OxEgq5Kc8X+z5X/v5M6XO/eB2YNcDsvblFga2iJsrIyEgX5jkNr
      WxWwWO6vaWRsbJQae5oRswZb0xNYtRQdrjgCCFp0rOdfI51KMTLQh3f6JIoKYefKKAwRl8mC
      dq3jmyFAlxUuzAumEoKiXlJ9lnISqZzJ8REN4zY2xNIFSBeuPdNd0AVCttJcduPE47IsEXSX
      xuOSb5WDVH6lT9hq+kA0A6NLErqxcvC80f1rWgCuHm1M01z1CFTvWGL8kx9jj5+9I112LGHj
      lLGb8ZhxX82itXX1KFv/iPbf+T/o2LqbAhYOxMKkdRnNhH6pkcmxYT559ftYzRzVlaVOduWP
      bQqZhaJ6bT5kCXIZjUprEYteoG9a5/iojl7QeLY6T4WtSP/c6qIzDEVhIGZnKO7k1LTCYkYw
      GYdTpSj2qGjErnMw50Y0ldnonlXomRbEsiXhuh5XGqx0UzCX9xIIVXI+HmDsou/gzax/a0YF
      uhFXT4Grvw/abaNwi7izugnDaR95rTRyeawGmlAJbv898pN9hCtqURRl1ecU7jY1NTXU1JRS
      heZyORLTw1RvepQJdwRfqIzWQpHcb/4z1UWJiE0jccWGnxCCM+Mm4xdSqLrOawkXXaEiTS5t
      +XCM12risUl4EZQ5Lwu6JEnUeU36lwocHxUEXDL1QfmaM9vpguDkpETE72RHY+k8g6bb6ZnM
      UxeyUhaS6J7M43Ur+JyrDw2jKhJbG7xkiyZZTbCwVKAtWFiO9D2flpjPOVAsTmLJNK3BPC6r
      hEAi4rUR9lg5NWTQO5dBw4pdLtIQMLGpl9oGxuMSUi6XE7ebwvJuM/Xav8M0bzzKXtnkuiEo
      6FDtv9J3vBRi3XqboXcKOpzN1FHe9SLZXI7h3uO0btrFpi3byWWznP7Vf2Z4NoOjYiN7nv0S
      VbUNt/eAu0w2m0WRZVSLhdde+TE1QTeO7lepkeJkDYnTKRcZu4NHmxSCzlInPjmik+5bBEnC
      IkwmZCdlZSpBq8ZC0cqWRpXwLZNOw1Jeoi9uYWOdDb/jctv3zklEAh6CLmXFuea7iRACU8CJ
      4TS5oobDquD3+WivciNJErphMhMvksnr1IYduGyXs47qhkBVJDIFg96xRVSRQ5YkisJKS014
      bcwA46dmMfVLQ9f1RtmVP1BOsTAXcBIus+GxSRydthHZ8Cy+5EkandFbhi+BUubAw9EqypxZ
      Cqe+y5Io5yvf+g9oxSKKonDk4Dt0eJJsCQtmU90cPhLk6zX199Uk6nQ6OXfiMPnut/ClsjRM
      9GC52OeciuBxf5qckaF3KsRjbSWdv61a5f2oj3KbxnxO4ZGABrLGfFYhj4xFLiX96F9UkBA0
      +MXyKHkJSYKgQ+BJmyvClgNkixByqVjUe9cukiShSFATdhArRigUizRELjtEqopMbejaQVyS
      pOV6uWwKO1oi5HUTCWk5vOWaEIBGSx7zivgyN+tkJXUoh4gnmY45mNj0Vep2dxIKR0jEqxkY
      eYM219wtzzIdm5CxMUWNH0YLLkR4E3a7nfm5OVxuN06Lyay0hWNT88SW4sS1brLZF3G53Hfn
      pe8QX7icBdVHVfoMlivWtZfUxKSusGTA/gsCl1WQzujsKcviswqOLdiYy0hUWIp0OXKcznuZ
      iSsMGxJui4FeNDg9Y2F37cp9ACFgIK6QwnaNo1xzyOT4cJJdLd7le2TpzqxFNyJbNJElmEsr
      7NwQIlc0uDAZp9ZvLi+cb0XpnIiE66pDzWtCAG7/RECJhOymOD9B7sIB5pq2YdjcDAwladwk
      sN4kvpAQYOoa4bkZBo0ImxvhjfFzvL/fRXVNDe++8Su+8JVvIMsyFZPjFDSd0cE+HI57kKLk
      Nqmpb6Ty9/6Uj19RCE3uwyJdcZIO6M562OpPczLhBKvApZr0J60UNMjqEs8Gs+QMiYGcnY4q
      Cb/tsup5Ys7CUg56c9VEl+LsiGSJak70ykcZzOfZ7jyHJK00CwWcEnW6xvv9OoG2pzAMg+rc
      Maq9d89+f3ZG4HF7CQdKC3mnTWVrU4hjfTOrFoAbsUYEYCU3W/ReWhRLEnSyAIsLAFwYOEq6
      bS96QfBRbAPNzlka3MkVq3/DLOmSBR2smQwRpch81mQxq2BmFxk7tY/J8x4kbz2maSDLMlU1
      dQA0Nq6dbI6KotDyzDcZ+ruDtNuuCK0IeGWNpKTSFSpQ7dSZVqo4OAbu3CKtviIfLLqRDYHV
      baHrqrxbOUMCh5vWr/wZ0uAgZ47+kKi9jY1lXTTmPqDcdq1N1DBhStTT9cK3KK+oZLD/HEc+
      1HimRUaWBFNxg4BTpsp/+13NMAXTcQNDstPVELjmu5xmkszpuO0K8m3MOEKUTL6Zgrk2BeAS
      N7K8XG3XFcCMq5GyYoq9Rh/zzk3kKzvRE79GkQQC6JsyyE7GwBSowqRJzjGqOclZa+kRLZS7
      T2INNVDR/gTNHVvvWzDb1aIoMg5WGg5kwC6blDlkdCEjS1AMtPLYjic59MvvU7Av0ew2mZgX
      VBVSHJ32sKvaQAIKhsSWiMFM04sEwuVs9QX5ZOwonTWdWCwqRSQMEyR55W8ynXWw+YV/idVm
      51f/8Lc8VTGP26KT01QmklZ2NFcSTeU5P7tEe7l8Wx11YE7D7StjW9m1ezGqItNWE2QqWSS/
      UKDKJ1Puu/E+w5UMzuXJaCpOu7q2BWC1SEg0buhEHvwEiySY7jtN0IijuwT7pysxrEE8kyfo
      EkkkubT9PuxpJfjFf8mejV2cPfYhro5WmjY9el8XuTdibnqC8eP7sVhtKN4yJNXK7PgwnZY8
      pUSxgmlLNeh5gh6I7vw3+IJhFt/+j/jmj2K27OaZb/0Jn7z613yhMkEfCg7JIL2kcVSxYZcF
      VkUwmvfx0u8+C4DFYuHJb/+vwMVZd+Nmug+8SvTsu1T6Jar8EqoiEbTmGBnsY+vOx9m0eSuu
      xDt8ocNGMm/id9mwW2Vqwy78LitHB2eQMHDZFDorVGR55UC2lDFw20sbl4osEfYopHQDt+P6
      0Ssqg04qg06EEJwcjBL2iP+/vfcKkis78/x+16f3rrK8RRUKHmi0t9Mke8ghh8Ph7JKxozEU
      JQ1lYh8UCm3EPigUsROhkB6kNXrRxIak3dWaGc5wyKFns5vTTbYDGt6XQ3mX3t6beY0eElVA
      oaqAQjdMdaP/EYjovnkz69xzz3fOZ//fjor5y7rNcFcQn1vZ3QJwt8W49rntgBpK0JBdKCKk
      jTl03c8b2SjK/DX2STk8grV+v4mA5/hX2bvvAIIgcODJlx/4s3wcjL33Op1T38cjWcg3/Pc+
      U+Sa4aVmCYiOw9Af/4+k0mn0uo6iyLz9sx/gjTzN3uJbrHz4H0l95Z9y9Gv/Nb/54Fdk66c4
      G41iWSYvRA1kEaqmgDD6W+stm2zbplatIisyLlfL43Lghd/noidF9ef/nDOijCUrDPb5kGot
      XtGh/cd5/5ezREvX8CsWlu1wcrqOW3MxkpB5bn8XjuOwXDS4srTESJtK04KzcwY4AoIkoUqt
      VlmO45CtmDy19+4uekEQGO4Kc2oqi2m1inoUSSDul0gGFCRRYGpVxzAFmpZDX3t0Xah2BTNc
      5a3/gLNFjs+97MaFhevEa/MoWEw6ERpqgp7sZYaEHJrYshkajsCi7WFCSrHQ1Nh/5Niu3PFv
      x9LyCstXzlAwFZKulsrikhza3BYRzaaaOsLgk5/D6/Xh9njIZTLkluZ58Wt/ymxdQ5k/QeXS
      LzCT+3nld76OrS9RWZjFI9usOG4ydYGzOQ3HqNB0x6mUS8y+/e+pnPj/WLzwNisVC9EVoF6v
      YdQqLF89QcAxqBhwJqPgbswihgeJxpNI7hChgWe5PFtkfC7LyPN/gBjs5vr4RQJuEVUWcasS
      l+crqJLNyWmLQs3iaJ+f3rhGKqThVkRKhkg8EqI96t3RO1JlkY6Yj66En864n3TUh26KTK02
      WSpZdCXCdCUDtEV9eG7x8+6KQNjSP/vyLXGAm/ioi9Nx1tpk3IQNjDX86M/8EUeeOE4sFkMU
      xYciAB8lkn0rzr7xA/zv/QVVSaXT3Vz/Pd2WWD3yX7D3mc9jGAYeb2uxfPjWz2iMv83xP/6f
      EUWR6Ymr5H75f2I3dfIdr+Anz+rkKaJhNxOVCKmhJxn74Od43F5CdpYnowU8sr0+f5YjkGtq
      CAJ4RAuPZPL2jEhAtGgbiJPwC5wvpxn9/HcIhkJUq1Xq9TqmaaKqKrZt02g0mDvzM44kW2Ws
      TcvhzFSeE2MFkkGVoMtmIOViOmsR9LkZ7Q6jyg/eDtvVuUD3grV8j/WWnbd8ZiHw40qSXGKU
      L3zxSySTSSRJemi7f7PZwDBafa8qlfI9JfY5jkN1/CTzuoJfbnlt1sa94u6m+9CzXJ+aYGpi
      bD1T1hsI0fS2rQt4z8Aw7b/7T1kQ2zj6wheI7/s8/qCXsEcgtecZBoaG8SsOvxcb45VkDp/i
      IN5SmCKLkNAM4qqBV2518An7JC41grw93uSdKQsl0k8o3CIH1jSt9b0bmoUoiqiqSmLkJc6t
      umiYrXEu5g2O9gcJukV8boWFssxLBzs53B97KIsfdqkbdCe4PVX6TphraOQcN6984esPnfAJ
      QFVbXoxMJkOlXEYQRBRF2cTqsB30QDt+6Twbg60Clr/Fd9Q/uKd15cY89I8eoX/0CIIgsDBz
      nfz8OOPT8yQGjxAOhwmHw7zxowSz+WWmL71Jur2dihKj6SyjiTsTTp/i8NKIhkcVaFpQitx0
      E0uSxOriDIWFa3iTQyRSaSRJwh8I4Dr021y4+iEhY4p02EVP0sfMao3DvSFOTxWYy9boiD68
      eMuuFoCdJqDdbUeNSE08yS56Bofv19A+EmKxGLFYDMMwqNfrOxIAQRAIp3tYyh8i2BgHs0LG
      VNGjQ/S/+qd4vT5yuRxLC7OomgujnMF0ZBq5KTzJIaLxFJWFawQFePK3/nB9Pr/yD/+Ut/7j
      /8LBo09z6tSHtPeP8tblaZ5PVsg2ZOJaix5lSVfRTaibAuBgaUHytQaqLOCt2BzubBmTjam/
      5hI1wm2DTFw9T0fh53S6muSm3mdyrI3AyBeJx+MtdaheZaVQpVQxcKkSccL2GgAAIABJREFU
      tu3w3XfnWMzrHO0P0x7ZGe/T/cCutgHg/hCm1myR7zcH+G/+p//1jq1QHxbu1SZYu//EL7+P
      I2kMHnwSt9vN7PgFmvMn8MsNUkEV03JQZIHTE1n2hIrMeJ9n9JkvU6vVkGV5w7M7jsPy0iKl
      UgmPx0td15mbnSHmdoh0DDJ5+u+proyjdhxDnz3Ji/uTLffxUom4vELAJXJ6tknSa9Meaqkr
      TcuhqEPAxYZIvOM4fLjkIn78T8hMnWXEnyHokdfn4PRknoGUG69LZmKpRtWwGUz78WibU7jv
      N3b1CbCGO50Ed6sSchyYEWMMPvnyR2Zvvt+415e6VgmnWRl8zRzTb19kpSLxXL+CGhMBFUEQ
      UMXWXEhCy4CtlMuIoojPtzl/SRAEUm1pcrkcF86dZmTfAV548aX1AOCZd21oNJDNEsmghqa0
      UsIrdYPeWEuNTPpFLPOm906RBGLbNL6XsXCmfs6RqIp2SxKTbTsYTQuXKnFppojlONRqBqfG
      dZ4eSSLfp4Dkdmtod6yIHWDtAW5f7Hc7FabDe+n78nfo7hvY9S7PNSP+djtF1+tce/8ndKor
      eBRoB+oVHVVObXom03KwGxV0U8CSXRiGsWXTj7V52zu6b8vOOC998evMTV1hdmYOxWhQrDa5
      Mr1Eh6+OdGN8TQv82t3rNRzAkjwMJjeP471rWVIhFUkUKFV1Dne7UCQ3lxcMGqbDx7GF77ZW
      BEHYHQJgOQICN9pwOgKS4LB2gm5Fm74TmI7AZOeLHPsH38EXCN71/kqlsuVO+TBRyOdBgHA4
      sn7NcRwm3v0bBpVphBuLoVi3qTcsFvM66chGUl5ZEtC8IZpWHmHl15z6q5O4vCHcPc8xfPg5
      oCVQl9/4N9j1LGrPS3QPjuLz+dcFz7ZtPF4vQ/uO8vPvfZf9kSrn3pmk7AmxJ3pz9+6KSFxY
      sDFth4RP2HaXFRA21RZDq7FIb8JNMtQSjEjAw0ymRl/CRaluUag0Nvjs7wU7XSu7QgCmUwPU
      SxWaiESSQfR8mXRmGo9w9xK6ls8fGo6IItjrgrOiJnjiG/8t3h0u6ke9+AHCkcima5nVFULN
      aURVWC8MOTvX5Kk9KdxbVAAJgsBIZ5gfvJtnNCHQFbWALJnZH3KmnCXesx+9YdLujOELCjQz
      f8Obp39JX083QqAD1RtCX7yE4AqSKRkIxQW6A1XGw3083R9iJltHcWr0RQVEUeBAh8q743Xi
      XmmdxeH2hS4IIFllFnM12iItD8+VuRKrJZ39XTdZiw3TpjvUUufiAZlaw8Sy7XWX7IPArhCA
      A0NhJALr/2+3u3j3A4P2yjJLjot+qXKLC1BguunCVL24zDorpozr8Gv442n03BLC7Hli5Wnm
      mioju1zluRPWFpJh6EjYlOqQq5gUdIHjQ7E77oyCIBD1u0iHbnKnxjwWUePXFM69Q8P24b1x
      cCiSQMovMBKuYdtXaZYdtLDIYiFLd0hiyq1QQyUVVAi4JfZ1+slXXFxYLDCacshWbOYKAnJy
      L71cIereuoreaDroTZt8xSBbblKuN3luJLr+nMVaE8E28N0w1HvjKpMrJd44UyTsd3GoL7pt
      e1rbdmiYNpoibqkm3+narhCAy1k3o5HyupSLosDBQ2kml8KMptxc/WCCfitHw5G46u5j4Bvf
      Id3dS7VcQpudpq2rl3g8juM4WJbFlRNv0/Oj/53x86c4+NTzj/jpdgbHcZidmUaWFXx+H/Nz
      86RSSarXfoFQN6lZGomQl552bUcJX5qmYTsbyYMFAcIumzAlbq28MxqtYiRRFNBu/PZqsUG5
      LhJOxYgMeIn41fX3E/YpeHuiXJipUKg2aKDy7Jf/c079/N8S5cyWp0BP2Obk9SyD6SCJoEZP
      4qZaaloOl6bzHO+9pUea0yrK6YkptIclTo0tE/J7GWjzgwC5coOAR6FmmFyezuDYJg1H5ehA
      FJ9r47LeSh1au7YrcoEMOcrM3Bxxrb4+AaoskgypaLIIfh/ZxQLnpS4+/9//byTa0iiKgsfr
      I5lux+ttuR4EQUAURcp1A+vCL6k5MomRY+j1Ooqi7GojWBAE6nodQ69hWja2Y/P+22+gaBpX
      V2yOdmuEfeqO04kX8zpRTd9R4/G5kkJXYmMDhURQ5Z3rNt17nyIpLqPcVgomiQJtYY3epIeh
      No2xDAwefpnJ5Sqq3mKfXq6K+NWW4HlUAcE2CIajJILa+nNcni0ws1xgf4e24W8IgkDUp1Az
      LCaW69i2jUu2mFgs8sOTi7gUkXPXC+RLJZ7qc+HTRK4u1qjoNumoe8fztCtSIcZO/IT0sa8z
      Xdom7TWsUoq3Y3pDO+rE0tM/SLbzKexShvHxcX74ox/SaDy6buQ7RSrVRk/fAOl0O/F4gsHh
      USRfikAoysRimZnV6o6NO8Ex+TgeREEQGE6p7D36LFNG8o5/16OKhHPvcObUh+x55vfJdH2T
      UzzHKfMoS5UWR4/tOOQb6vq5s0bAW9Ut9nW4cW3DaNAeUTnW5+NIjwdsC1mwUSSYXirSFXI4
      0uXCdmAyB1881oFLFbHugdx3V5wAl979MVq4HQK9lJeuEXTfbkQJdCS9WNEh2gcO3vX3RFEk
      2DNCXQsRT6WplIrMzc/T1dX9SFIh7hW6rtNoNFi89Dajnlm6/TptYRcnJgqsFg2SIW3dFbkd
      TNthOVsm4hHvyos0X958AgCE3K2FFezYR2Pp/IaeYrdDk+HkB2eI9YzS1TfE0sW3kV1e0k/8
      AStiNyt0YHk7ECMDrJhhrixbeCkhSyKzmRqp0Nab3xpEUSDqV0gFFUq6Q2/KT9WwqBoWDdMm
      EQkiALWGQzK083azu8IGeOJ3/kve+cX3eOUr/4i86/cozXyfwBYBWyWws04suq4jCCLJnkGi
      0SjReBKz2eT8+XPs339gV1d7WZaFruuYpolgN9CUm2MNuGWODUQ5P10kGVJJ3eFFd8a8TFkp
      3hxb5EiHiG62yhfbgsKO1QNJFLAWT5He/2dcWjqO1ziJS9n6u4ok8OrhKG//7b8iLJQR7Qad
      CS/LF2v0P/V7BEORDbaBYRj84K/+HR3CFD2xrVNCtjt1gm6RobSPty4ZFKsNVhSNl9MqRtPm
      6lyJzpgHv1tp2YS2w2rRIHHbprHmUdsVJ4DfHyDdM4Tf7yeSSDOds/Hq05uMvYLSQ7Kjd9P3
      LcvCsiwkSeL0yQ/4xY/+hgtnPkCf+5Cz5y+S7upjaM8w+XyeUqmEILT68u5Gm2AtjfjS2Q84
      HFrdMAfTmTrdCR+psJtC1WQ2UyPiU9crq9Zg2w5jixWalsCx4TQLZZlrGYHOdIqrSw2wmvi0
      m375i0sOliOQKRmb/tXrBtdXdQ4/9TLj594l5t1+zlyKSCyoUjFlSqbE3rhOzJ5nYmqa1J5n
      Nsy3LMsMjx5k7MpFekMmM9kmYe9NPp/tYDswtmxQ0OHqsoNuNHh2JIHPJaNIIl1xNyfG89i2
      w9uXMtQbFrIkcnaqQNSvIYoClu0wvarzq8ld4gUCCIVaRc+2beOJ9VBcfYv4ba55K3MReGXD
      tbGLH1Kd+HuqhsPe3/oT+gaGiMQTCIKA3+fjrV/+hOVzP0Ff7CI18izZXJ5qtUooFNp1J0Em
      k+Hk639JxCvgMg3kwMbXo9ziBuyMeYj6NT6czHOsP7S+u1V0k2sLFfqSfkK+1s463BlGNyHq
      10iGOpnNVDmzmKEraBD1ing1gWR4+wzMpeJFyuVj2K4YcOfmIRGfQmQgxMlxG4EaJUNATB/Y
      crORJIm+0eOMXz9J3pTppXDXObpWDtP17NcIh0OMaC7+7t/9CyK+myeIR5WI+RVOTebpSXhb
      XYDiHiayDhPSARbGLpHu7KPz8ChfTyR3xwlwKwRBoKHXqS+cxa9uJHnVnDorVoxQJA606MAX
      Tv41Q/4CWTFN797juD0eQqEQqqrRNE1GDxyioEvQrFCtGeQLRVauX6S0NIbiT+LxPHqqkzW4
      XC7KC5c4mGjQFtxcr5AtN4jf4kFRZJFE0MWpyQJGw2S11CBbMTnQE8Z9W5ygXDfRFBGXKhP0
      qqRjQTJ1lZPXa7QnwnQlfLg1act/juNgR4ZJ9B7g+tQ4EXUzUeeaSpEtN7k4U8RLkagHJjwv
      s+/p17bNwwrFO4j3H6WaXyQmtPqebSUstuMwXvLRduR36e7tx+fztZL7XCHGr1ygM+rCsh0+
      GM9TNWyiPpUnBqNMLVXJ1GDfK39IIpWiungFf6KH/qERRFHcHV6g25FsayfwxLe5Wk2Sqd6c
      DL8Gwvj3uPCbH3D2zb/kg+//S7TGCqen69S1NNItk6xpWquNqAPZ1QXahp8hkupmcnKK7Pw1
      7OoSv37977hy4Rxv/vB7NJtNdF2n2dw6K/VhQBAEFF9s288dx8Fobgw0qbLIsYEIUyt1Al6N
      fV3BLXX8sm7iv6W4XBQF+toCREJhBtvvnCoS8SnMXXwHj9dPYOi3KNQ3tlGazhicmm1yetbi
      zGSBA5EcHUGHq+YQvYdeRrtDBu5a4YylhLa9x7QcxvU0ez73HRJtnRs+27dvP0JsBMt2yJR0
      YgEXL4zGaVg2V+bLWI7DSrHF9lcpFXF5fHT330yL3z1b/21IJNuIf/HPWJqf5urF1/E3Zkn5
      Iem1iJunESWYk5oslx1mVqs8/8owzWYT5Uam4Zq3R9U0nnr+82guDVXV+OM//Ta1Wg2Px8NR
      UcQ0TTp6+pBlmUajwdLSIj09m+2M+wnLNBkfHyeZShEIBDZ4pnL5AuNOhd6kd5MNpMkiRtPG
      c1tOmSQKJEMugp7tYx2muXNm7dsxl60j1saZGLtM38Awb51pw56dIuRVsSyLRMjHEx0tffXC
      tMLlqh85sY/h46/tOMXEH2mjOmet83quRWr1psOkM8S+F393y/oJURSJpjpZWZ5krggNvU5v
      0ktX3EMi6MLrkqjVTX79y7/jta/+I9q7vomu6+tJgrtWAKA1CW0dPSTT3yKXzTA+dgqhWUX0
      p5AWf81K0SAdUpkuhFg+92MWTlQQtADpA79NR+fNnSIQvLnDSZKE33/T5acoyrrQeDweAoEg
      pmk+0NRpUZLo7OpieWlxw1jq9TruxgrxmIszU0UCbplspYFlOYiigN6wiARacRDHcVjK69iO
      Q7bcoN6wtswNAljK10mGNu/ClXqTWsO8q1coVzY41Bfm9VNv4PEGCab3MJCoboi4Oo7DUrEB
      8X0cefJz63O6U3R2dzN+TWPgFqa61ZpIPvQU+w8/g6JsXzzk8oa4Yg4yfPwAH/zoXyMA3fFW
      fXRHVOLCdJF+d5Yzv/xPHH71G0CrTHXXC8AaRFEkFk8Qi7+2fq1YHCX3q7+kbCzhkypEmlNU
      mjaZconxC+/TfoNS/N4o1QV8Xi96vY7X53tgXiJBEDDNJolkasPuv7w4R9QDNcPiYE+Iv7+U
      4ZX9yU1+/KWCzuRihWhAZaVgcHwoiigKTK9WSQRduBQJUWyxJguCwNRylaf2RDeNY2yxzHMj
      sTumVjiOw2qpwbtXMoRlkfd/8VeMHH+V4oqNV2vl98wXHYzAIOn9BzkYi3+keVNVDaHtSczq
      2+s5P8WGyp6DT99x8VuWRX9/P/39/TSbTRq4qegmXpfMfLbGStFgPltDlUV6kgIry4t0dHav
      f/8TIQBbIRgM8fSXv00mk0Gbn+DU2RM80W4xHHZz1mxbd4tuhVw2g9vtQRBFXC7XBv90vlDA
      6/VSr9cfqIEc2CJFu72zh3/2F7PEfDK9SQ8eTSJfMRBFkZC3pd5cmC7QMG2eHo4iCAKVeo7x
      xQo1wyQVdjGxVKZptnR0QWgxqJXqTWYzNbriN6tVbNuhopvbJpjpjRa/Trlu0hFxsbczgCAI
      DFWb/OitHxENuKmqbSjxIXoPD62rJ81mk7FrVxkYHNqyDmE7CIJAqneUpXfeouMGC6Ik2Hdt
      ifXuu+/w7LPPrdsSrkgHb1xdIhwKQK3Gi6MxjvaHmFmtYtoCxezKp0MAoHUyJBIJEokEvUP7
      mXj3rynOL+MdCGypwkxNXCM7dY7zFy4S6xwkFvbzxPOv0Wg2KZdKuD0eRFHEsqxHkh6tKAqd
      vUP4mov0p7wE3AqZksFKsaWCWJZD07IZ6QwysdRKi/C7ZfKVBpbTco12xjYLrTpX4spska64
      95biFQBhW9Xp7UsZ4kENvWFyfCB8M0dLEWnWCoQPPM3Ak89SLpeZuHIOs1agVMhy8Lkv0d7e
      cc8qELRc4YuBYWz7GoIAhpq4a+qLqmobiqWqtRrhUIqXvvpN3vjZ31GszXF9pUrTdIiHfYTi
      yQ3f/0QLwK3weH0o8RGmL/yaoC6g9w+2ygIrZSKRKJPjV5Hf+nPqVYVE7BBHQwt4VYGzP7yG
      IKuULTdWZZmLS/DVf/CHBIN3L6J5EPiTb32bsYun8a6+x0ymzGCbj/aom9fPLuNzyfg9Cm+e
      W6Yv6QEczk+X+epT7ZyZKmxZmaU3LKaXK+hNe/1z23a4vlol6pOZWCyTrzbxu2TSERcLeR0B
      GGzzcm66yHM3Tpq1ReZSRJ4ejlPPfMj4m1cJqBa9PhFJFTjjqLjd7o9sP4miiK/zMKXxKyiS
      wPVMg5FtKtrWsGfPnnU1UhAEREkh2TWAJEm8+OoXefMXP0auXaGuxOk78CXiiY0CsOviAB8H
      0WSa8OAz/ObNnzJ7+h3mTv2KqxfOMj12Cd/8GyTFPKWGgBYI0hmRUWWRhF8g4bXp8DXoiigc
      bJd572qWjp7+O+qeDwItDnuJeKqdk5enOd4Bv7mSJRnUKNWavLw/QSrkwueSsR2Hrrib8aUa
      xWqDvpQfr2vzezw/XWAo7cOtyYS8KpmSwenJPMmgSm/Sx8mJPB1RD52xlu7ck/CSCrvxuWRm
      MzX2dgTWBWqNJyjiUzEaJrliBZcsoCoSINCIHtrkprxX+PwBZqavk3ES6JaEUVwi2bl9Oath
      GOvqjyAIZGcuYxam6Rg6jKqqJNs6yJd1jj73BWLxzfbJp0oABEHA4/EwcPAZLMWL5Pby5Je+
      wew7f8Ve1yKSCF7ZZq4mUzVs4kH3JgPTsh0W5qYpLo4TbN97T3rs/YTLG+Ty1TGiHoez14sM
      tXkJ3UiHns3USUdcuFWZ89MlXKrEULt/gzGbKzcYX6ogi9Cb9DK2UKJYayIKsL87SMDTUlF6
      Ex6W8jo+j0Iq7EaWWgzOTdOmVG8S8ambUqEBgl6FtrCLxXydct0kbwcYOv4FRPGjRdfXdH1J
      kgh1jJDqGaW8PI5SvEao5+i2p4ogCCzMzxMOtwwHlz/K2MXTNAWNZCqNpml09g5tq0p9qgRg
      DZqmke7spmtoH263B72cI1Jp6ZWKCAmxhKbnODNVYjpv0Z28qe/PZXV8ikm7V+fyhfOsLM4y
      MzVOJNX5UE8EfyBAsnc/hXKd/kCNuWyN9oibesNmfKlCX9LDXN6k4Wkn0HWEitZJqZgnpJnU
      DIu5TJW2sEZHzEOp2sS0BfZ1BQn71JY6w9qODn63zNnrBRJB1/pilyWRdMTNifEc7ZGt8+vz
      1SZNyyEZckPXy0Rid+lIuAO0TkG51ZhQVGnKAZIdfdueAGuEW1cuX0RRNSKRCNmywdypH1Eu
      V2jv3XNHr9Sna+VvA0fc+JiqBKrkcEQtcdluRSAnl2toEuTyVa5PzPH88R6a1RUOJ8pcWFHI
      559g9voUfYN7PpKB91GgaRqjT32eiWsdFDLvc9kZwBNP0hlzGCtn6Xl6P/1+//oLnp2K8NYH
      P0XHQ5fbIOJrVXF5XTI1o1Vos1I0mM/pgIMqSTi0DNt40M3pqQKSCANtfjRZYC5bJ+iWeOvi
      Kgd7grg1iflsHdNqeZBCPpW+pI9xI83evsGP/by2bW/w3LV399Pe3X/HBbymNmIUmfnVTxDT
      T7BneJR05T181kXmZg/R2dXTcueurpC4YQPYts2bP/vBp18AarUqzdLKlp+JgG3UWt6DepPi
      9YsM+JsoPhVNEdBkkcWCSa1uMT87Ayf+H8bN/4qRA0ce2vgFQWBgzygDe0bvem9n7yCdvYNk
      Mhkun/2Aij52o2GgQMyv8vq5FWzb4fnRBH63gmVv5tN3HIfXzy7THnWhyBKyKPPy/iDji1X0
      vIXesOhO+hnu1LBshyk9xsDxL9yXmMnttRo7/U1BEIh3DjFnNAjkPmS5UaEq9RIQJihkV/F6
      /ciKgmmaNJtNVpYWWRk/wSH16qdbAEzT5K0ff5cjpd8g3PakSzWRy6siuUaFZKdOw2gQVBwU
      EWKqybnJIlRLTM/WaXOZ2O9PkVaqnHnvewyNHtx1maRrsCyrlV6Bw49PLtIbVzk7W2dfV5C+
      pI9cxVjPCdouABYPaOztbHnBTlzLAF4G2loxhPeu5YgHNCq6xbw0yODxF++bndRsNnfMl3o7
      QqEw864Q07l29lljnFxp8OOCjdv/LsP7Dt0gQ4Yff/f/xTEKpNUil8xd3iLpbpifn6PRaNDd
      3bNlpdf5D97gmP8KVwsJrEKVNqVGyttyBS7XJHrddZ6PWkxfPkOv1sRzo19uSLU5ZF1HdDsI
      nrVF0sRx4ORkhsDJ99l38AjqDRbk3YRSqUQoFKK4OseTA146IyouVWJPZwhVFjl7/c5UM2em
      ChzsDSIIAueuF9jbFdh0T1m3KUaeZnT48H17fsdxPtamoigKwyN7OVWvs1DI8NKQyG+uGpxc
      qlAulwkEAlQrFfYG86iiTcwfadG1fJKN4Hwuy/LyMgF/YBPnZ6PRIHv2e6Q8Bm0RDVvRmFup
      Y9lOqzu66lCoQVSzCavWer/dNWzV6tMB+j11VsfPkTv/OtMT1zCU4H0x/u4HTNPE4/FQq9Ww
      5t6hPyZimA6GaWMjk6s0iAZcd6RUuTZfZmyhTLluka80UMSWx2dtLrLlJmbbMwzse+K+Cr9p
      mh+7X4Msy1QrFQw1hlKdpS+hUbc0XMEUkWgMRVE5f+ECo0kBSRIRReGTLQChUJiOjs4tCW9t
      2+bdk2fp8pQZW9SxC1lGQw1W6hJzVZlLeYW0qhNQdl5ALQjglhxiikFcqhLTZ3j/zCXyM5fJ
      ZDLkluZQfWFcOyjcfxBYj9aqKiUdKisTnJyqI0kKXXEvk8s1BtOba3/XYFo2pyfzuFSJ50cT
      9CS8OAhcni3j1iQkUaTgP8DI4efue231/erXEAqHWVpaoVyp0uYxiHstfv3eh8xnyjhAMJZm
      dWEKy2wl3e0KdugHgVKxwA/+zf9Br69Il7VMULVvMJfBVEnijRmF/6y7sGnnv1c0bVp9u2j9
      9ooQxffqP6ZjcP/6PZZlPXRiXse2efdXP8WVP4dXkzBth5BXI7FFVuit+PGHCwy3B+hL+dYj
      wLYD567naMghjn/p2zvygum6jizLj4SQuGXsNpj4zXcZ9OW4slhn4HP/HZIsoaoa9VqNQiHH
      6tLC7iyIuR/Q6zWe8VwnrK8Q0uz1gNflrEjErvGt3o+/+KEVVxAEkASQRUgLWeyf/znv/1//
      A8uLC+tRyocNQRR56qXX+GBe5MpClcV8A8O8c2IZQDzgoi/ViouspU6IAuzrCjFf8+zoWSzL
      2pLk92GhRQXvJnXwt7lQaWO6pFIs5lkjA3O53YQjMfYffuKTrQLdCS6Xm4WaTLJyAflG1xPT
      hqWCTZfHvMu3P+bfFi1ido4F4iR7R+75+zttDHI3CIKA6DTZGyzSHnUxsVghHfEwuVRlfLGM
      36NsYJ2AVm81o2lvSqtwgJoYonPg7u5YUWx1wLEs65EJgSAIeLxeUj17WSkZFC/9lPzMBVZW
      s2TGP2B6bpGVXPnTewJIsszoc7/DQuDohusbu4c9ODhbGNE7RaNh3DUNeKcYHD1C2VQIeFQO
      9YZ4/2qGpmkx1O7j2nx5w70N02IhV+fUZI5KfWNpqCQK2ObmWuA7YTdsrKIo8sKLr7DnlW/h
      738W2eUHUcGpZbh8+jefbDfo3SCKIoH9X6Ty61P4ZAtZBMUlc7bgQsZmb9Cg0JS5Uvey11Mh
      qNyfRQewLKXoOvziR/qupt0/m0wUpXWhd2syz4y0ao6bpo18o2n4mpzOZeoMpTS8mpeLswVW
      SiZP7Ymt5w15JWND2anjOOTzefx+/4Ydf03wbdveNURkrYKqlrduTbV72rY/vSfAGrr6hlj1
      3CyCHo2aHGqHoqPwq0KYcjTN8FCUfOP+7QXLRAh/8Z8QvEH18ijh9Xqpa5sJxRRZpGo0+emp
      Bc5O5anoTUzLxnFaPQaG232EvTK/uZxhPlvn0myRam6Ji+db5LfFQqGVGRqJrAvEpmYd5oNV
      NT8q1rJaJUn69AuAJEnEnvwGRfNmtFIQ4LlOi7Bfpi+pEfOJNIMRrta91MyPpyItGirOsT8i
      2dHzMUd+f9BoNNDM4qbrjuPQk/S1CuqDEpOLRaZXKvzqYg6AeqNFOdgRdaFI0BN3c6QvhGDW
      AVheWaFSqQCthf7mz74PbBSCjxrVfZj4VKtAa2jrHuCcdw9B4zwtc64FWb5ZSDHc7aVpebm2
      aGDmi+zzlLf5tTuj3PYUx46+cD+GfV8wduZtBvxVuM32sWyHqcUSTw748btlkkGNkXaba4s1
      mpbN+Zky8YCLWsMmHmgl1dm2A1ajVRo5NAS0BOnvf/a39CrzLC8v0da2M/rK3YJP/QkArQWe
      fOabLNhRHG42gG6I6oZ7VFlgX6cLQ3FjOy2//r1CkkSEB6T32vbNqq6d3k95flvWB5cqEriF
      SkUSBUIeidfP5TjYE8ahVRcwm23t+g4gyTf1/1qtxukT75AW5pEFh1Iu8/Ee8BHgsRAAgFRH
      L21f/XOmUl9hpenDskFg68WUTno40UySb957bopj3b2t00fFvQqAYRgUswtkSjo1w6SqN6kZ
      Lb1cFAU0RaJh2uvN+a7MVykb0Jv0cHm+TDygsVpqkAy6qBkWkxU/faPHAMhms1z95b+mW/+Q
      /rjKclWkvbvvTsPZlXgsVKA1BIJBDrz6DRamj3Hyh/8St7b1Yu1UILe9AAAH00lEQVSMyKQC
      Ps5dMYjsgK9yDU1bwN25/+43fkTcq1tRkWX0eo1SvsS83hIcxwFLUMnXIV+uc/LaKj6XxFBH
      mI6Yl6i/dSou5nVM2+bzh5LkdBEj+QyDAyMoN/T6xdlJ9rXdHI8STK83Kvkk4bESAGipOu09
      gyz3HaM+9iaOs7EscrFosZC/4QO/Ry9GwXIR30H/gocFSZaJDxyno/EBGzOfHd6frPHiQRe2
      o1LRbeZrLQrENRSqTdojbuYqCqG9X6CrvXvDbwfCcUozJgGP3Ir6+tNbxj1up6fRdX1XNCtf
      w2OjAt0O0R1EtC3MWzgu9abNcrbKobjOUEhHsLYWgO0CXIX0M+u+5t0AQRDoPfgis9XNVClr
      JZGSKBD0SETVCpfnSuuf246DKos0Q8Okblv8AI16GfVG58K5nEFn3/CmeyzLYmlpccO13eYZ
      emwFQBAlut06lxdNTl6rcGqqzqnxKmG3vV47nLMUrpY3v7DNDZhh0fSSfuqru64+wOfzQ8cL
      NG7R9lbL5ibrJ+GXadYL/OL0POev53HJEpoioi9f2fS8tm1Tu/7uelujEiFC4c0xD0mSaG/v
      2HBttwTGAD784N3HTwVag5OdxCs7ZOZzHI9UqeoCIcXmStaHR9GIuOGFEY3LqxoFPUdItdez
      I9dQMmUmPfvwdB8m1jVI220ve7cglOyhvADRGwdBrmpzuGujGlKqW1hmg6c7miyXa2hqR+uE
      cDb3VhMEAdQAUMB2HMRQz64T/Luh2WyiZM89vgJgWRYZXSSpNXBJDi6ptbD3uivMLOhcF90M
      phWG4wK/ngjxoppbX/yOA/OufjyvfpvjHT07atz3KOH1+VmyFOBmfo9h2siSSNN0MG2Ha0s1
      Dre3ikQSfhgv1PC6VITgZvVHEARET5SGmWM+3yR1ZLP6s9thmiaq9AkvifxYqOfJGiI93o0J
      XoIA3T6TlFVmLBPiQIcEtsN0Vabb27IJlpwQ6a/8E8Kx+KMY+T3D7/cz4XjhFo/WpXmdkEei
      qjcxTDjWLa0byjN5m6urBtHDr3JocHjL3X3PkReZvBoi2NVOPJF6SE9y/5DLZbkwU3k8BaBe
      r+PSV8mYImwTC1iqyxQliXPzDqppwC0hgSouNM8nzOUX6OZWAbAtE6/iMBi7yccPN9yktohu
      NEi0dWyr2qiaxvCB4w982A8KiUSS3nTk8RSAlflpbL1ERGmgbRPr6vaZdJPlQl6hz2uTvMFb
      7ziAP/nIGOM+KvqOvMq7f3uegFSn2rA50iWj3NJE23Ec5goOYY/AnoSAGO1/JATBDwuKouDr
      PPx4eoH0cp5MHTpuK4xZS5FY++/xkkJcs0i5brpQliw/Pa/92a6lRdkOgUCQtv2fI6A12BOz
      Nix+gOWyQ0OOMpYRmTMi9D/zDz9xhu29omtg5PEUAKOwhOjYbPd+BUHAtCFvK+RslYzemibL
      ETCGv0w00fYQR3v/0DtyFF2K4HdtfvCoB5q1LL1hG2XgdwgEt+/Z9WmB2+1+PAVA1LxYjnDH
      2rCaKRB1O+yN2VRljbm6wlz6Vfa98rWHNs77DU3TIHF4y3wiWRJoD4mUO3+XvuEDj2B0jwaP
      pQDY9RKq1GJ0WMPtx33VFNCkG14hv8W40EnvK3+IJH2yzSbHbLCWGm1arSZ0hgkLFY1qzx+w
      5/ALn3rVZw2Os4saZT8s2LZNc/laKxXgluu3F6LbosKs1I1ZX8VB4NhX/wz/Fm2NPkkQBIHE
      wBNcOzGJ5PKjRAcQVR/g0NY9TDD06Vd7bsdjJwD5bAZf/jJl22Gb9lgApDWDukdj4Pf/OSDs
      qobaHwdt7Z3Ek/8YUZR2VVrCo4AgCI+XCuQ4Dtfe+xmS3SCmNu9oAwgC+ApXKBeLj2Tx27aN
      Xq8/kN+WZeWxX/xreKxmwbYthPmTNO0WxeHtuNU4bNgC5fgRYolHk93pOA7yQ+pD8DjjsVKB
      BEFEiXRRnV3GtcXaMh2B09Ygsa4hXOkRRvcefmRG7yctzvBJxWMlAI7jYOVnqTcFBrwbOYAs
      p1XRFTvyRQ499dH4fB4Ems0moih+JhAPCI+VANRqNfRynrrJpiDYh6EvEPOp9O/Z92gGtw12
      A7vapxmPlQ2wOD/HW/k4uS1IsAr5HJG9LxAIRx/ByLbHrekZn+H+47HaXkrFPMmwl7RpbqAE
      NG1It6VJpD5ZnDaf4ePjsTkBHMdhNVckkyuSMeQNUeCyJdNz5EXcnxJf/2fYOR4bAQDIrK7i
      tiv4FWu9+GPFDlA88C3aOjZXPn2GTz8eGxWoXC5TnDzNSNBAw2EtG7gaO8ihF3770Q7uMzwy
      PDYngCiKRPsPMBoyUISbqdCpzDu885/+xX3j4/8Mnyw8NidAPp/jnfc/xJ1y0+eurV+XsPH5
      fJ95Wh5TPDYnQL2u4xJNZMck7blZ4TUTe469X/ijzwTgEcBxHBqNzbQrDxOPjQBomoaNhCxY
      6z3Dlp0w8UOvfRZseoTYScfJB4nHRgAikQiC6uJ63ctUubXg632fo2tw74b7DMPg4oULjI+P
      PbBszM/Qwm4I8j02AqCqKqqqMlZSma1pXCi4mJu4vKk8sFqt8oPv/w3/9v/+C6Znph/RaD/D
      w4JQKpWcR30MPSycPHGCS2dPEnM7uCWHmhTkta99c1OiWblUommaRCKRRzTSz/Cw8P8DoqQW
      DsDmUncAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
